<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://zhaoyushuo123.github.io/atom.xml" rel="self"/>
  
  <link href="https://zhaoyushuo123.github.io/"/>
  <updated>2022-03-09T03:28:14.887Z</updated>
  <id>https://zhaoyushuo123.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>高级数据库(三)</title>
    <link href="https://zhaoyushuo123.github.io/post/%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E5%BA%93-%E4%B8%89.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E5%BA%93-%E4%B8%89.html</id>
    <published>2022-03-09T03:22:33.000Z</published>
    <updated>2022-03-09T03:28:14.887Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Log-structured-store"><a href="#Log-structured-store" class="headerlink" title="Log-structured store"></a><a href="http://blog.notdot.net/2009/12/Damn-Cool-Algorithms-Log-structured-storage">Log-structured store</a></h4><p>日志</p><h5 id="写"><a href="#写" class="headerlink" title="写"></a>写</h5><p>追加式，顺序写，</p><table><thead><tr><th>–</th><th>–</th></tr></thead><tbody><tr><td>Foo</td><td>A</td></tr></tbody></table><p>追加第二个元素Bar同时追加日志A·</p><table><thead><tr><th>–</th><th>–</th><th>–</th><th>–</th></tr></thead><tbody><tr><td>Foo</td><td>A</td><td>Bar</td><td>A`</td></tr></tbody></table><p>重写Foo时在A·后追加，并没有修改Foo</p><table><thead><tr><th>–</th><th>–</th></tr></thead><tbody><tr><td>Foo`</td><td>A``</td></tr></tbody></table><p>优点：</p><p>不限于首先删除最旧的</p><p>利于反复覆盖写的数据</p><p>利于数据长时间存在的数据库</p><h5 id="回收机制"><a href="#回收机制" class="headerlink" title="回收机制"></a>回收机制</h5><p>(磁盘空间有限，回收时也有代价的)</p><p>例：每４个块为一个segment；4个 =满了就回收</p><h4 id="BITCASK架构"><a href="#BITCASK架构" class="headerlink" title="BITCASK架构"></a>BITCASK架构</h4><p>内存-哈希索引</p><p>put()不管是否存在，都是追加写，然后更新索引</p><p>get()都是只查看位置，不写</p><p>回收和文件的merge</p><p>多个文件对同一key的多个value，可以回收掉旧的只保留新的</p><p>例:</p><p>D1    purr:2108    purr:2105</p><p>D2    purr:2111</p><p>D3    mew:1086</p><p>只存purr:2111和mew:1086</p><h4 id="存储大小计算"><a href="#存储大小计算" class="headerlink" title="存储大小计算"></a>存储大小计算</h4><h4 id="容错机制"><a href="#容错机制" class="headerlink" title="容错机制"></a>容错机制</h4><p>B+树需要日志来保证掉电时不会丢失写入</p><p>BITCASK本身数据就是日志</p><p>对old data file生成一个hint file，定期做哈希表物化(hint file只存value的位置信息，定期重写，并且不写旧value的位置)</p><h3 id="Log-structured-Merge-Tree-LSM-tree-Model"><a href="#Log-structured-Merge-Tree-LSM-tree-Model" class="headerlink" title="Log-structured Merge Tree(LSM-tree) Model"></a><strong>Log-structured Merge Tree(LSM-tree) Model</strong></h3><p>基本架构</p><p>Memtable</p><p>SStables</p><h4 id="写操作"><a href="#写操作" class="headerlink" title="写操作"></a>写操作</h4><p>①在内存中先写入memtable，当一个memtable写满后变为immutable memtable</p><p>②然后把immutable memtable写入磁盘(小合并minor Compaction)</p><h6 id="①和②同时进行，不断产生新的imm，同时冻结-小合并minor-Compaction-入磁盘"><a href="#①和②同时进行，不断产生新的imm，同时冻结-小合并minor-Compaction-入磁盘" class="headerlink" title="①和②同时进行，不断产生新的imm，同时冻结(小合并minor Compaction)入磁盘"></a>①和②同时进行，不断产生新的imm，同时冻结(小合并minor Compaction)入磁盘</h6><p>③imm转移到磁盘后变为level 0 SStables</p><p>④level 0转为level 1    (大合并major Compaction)(level 1各块不相交)</p><p>⑤level1转为level 2    (level 2 各块不相交)</p><h4 id="读操作"><a href="#读操作" class="headerlink" title="读操作"></a>读操作</h4><p>先读刚写入的内存中的有没有，</p><p>没有读到就读磁盘中leval0中的最新数据</p><p>没有读到就读level1</p><p>从上往下，从新往旧读(读起来比B+Tree慢)</p><h5 id="写放大"><a href="#写放大" class="headerlink" title="写放大"></a>写放大</h5><p>①写入1-100，其中57在leval0 leval1 level 2中都有</p><p>②写入 5 ,6,51-100；为了写入5和6；需要在level1时写1-25</p><h5 id="写操作时的小合并和大合并很性能；一般研究减少写放大-写放大减少可以减少合并"><a href="#写操作时的小合并和大合并很性能；一般研究减少写放大-写放大减少可以减少合并" class="headerlink" title="写操作时的小合并和大合并很性能；一般研究减少写放大(写放大减少可以减少合并)"></a>写操作时的小合并和大合并很性能；一般研究减少写放大(写放大减少可以减少合并)</h5><p>B+Tree的并发不容易实现，LSMTree的并发容易实现</p><h4 id="链表扩展"><a href="#链表扩展" class="headerlink" title="链表扩展"></a>链表扩展</h4><p>选择部分数据构成上层链表（表面上有好多层，实际上没有层的概念；实际上一个结点有多个next既有多个后继结点）</p><h4 id="LevelDB的Sstable结构"><a href="#LevelDB的Sstable结构" class="headerlink" title="LevelDB的Sstable结构"></a>LevelDB的Sstable结构</h4><p>sstable文件中metablocl index中元信息？？？？</p><table><thead><tr><th>–</th><th>–</th></tr></thead><tbody><tr><td>data block (n)</td><td>存</td></tr><tr><td>meta block (n)</td><td>管</td></tr><tr><td>metablock index</td><td>管</td></tr><tr><td>index block</td><td>管</td></tr><tr><td>footer</td><td>管</td></tr></tbody></table><p>1）DataBlock：存储Key-Value记录，分为Data、type、CRC三部分</p><p>2）MetaBlock：暂时没有使用</p><p>3）MetaBlock_index：记录filter的相关信息（暂时没有考虑filter）</p><p>4）IndexBlock：描述一个DataBlock，存储着对应DataBlock的最大Key值，DataBlock在.sst文件中的偏移量和大小</p><p>5）Footer ：索引的索引，记录IndexBlock和MetaIndexBlock在SSTable中的偏移量了和大小</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;Log-structured-store&quot;&gt;&lt;a href=&quot;#Log-structured-store&quot; class=&quot;headerlink&quot; title=&quot;Log-structured store&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://blog.notdo</summary>
      
    
    
    
    
    <category term="数据库" scheme="https://zhaoyushuo123.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>高级数据库(二)</title>
    <link href="https://zhaoyushuo123.github.io/post/%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E5%BA%93-%E4%BA%8C.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E5%BA%93-%E4%BA%8C.html</id>
    <published>2022-03-09T03:20:51.000Z</published>
    <updated>2022-03-09T03:21:34.390Z</updated>
    
    <content type="html"><![CDATA[<h4 id="为什么引入buffer缓冲块"><a href="#为什么引入buffer缓冲块" class="headerlink" title="为什么引入buffer缓冲块"></a>为什么引入buffer缓冲块</h4><p>B+写放大，不能顺序写，读的性能差</p><h5 id="引入buffer利于写放大"><a href="#引入buffer利于写放大" class="headerlink" title="引入buffer利于写放大"></a>引入buffer利于写放大</h5><p>引入日志保证写入内存时持久化，可以把随机写改为顺序写</p><p>利于读</p><p>空页，查找一个页，淘汰(LRU,SendCache)</p><p>网址<a href="https://www.geeksforgeeks.org/page-replacement-algorithms-in-operating-systems/">https://www.geeksforgeeks.org/page-replacement-algorithms-in-operating-systems/</a></p><p>LRU缓存</p><p>【 需要循环结构和额外的缓存标志位】</p><p>1.0, <strong>First In First Out (FIFO)</strong></p><p>按顺序</p><p>2.0, <strong>Optimal Page replacement</strong></p><p>替换掉未来用的最少的(但是计算机无法预测未来所以用下面的方法替换)</p><p>3.0 , <strong>Least Recently Used</strong></p><p>替换掉最老的</p><p>用链表和哈希表实现</p><p>见LRU.pdf第4页</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;为什么引入buffer缓冲块&quot;&gt;&lt;a href=&quot;#为什么引入buffer缓冲块&quot; class=&quot;headerlink&quot; title=&quot;为什么引入buffer缓冲块&quot;&gt;&lt;/a&gt;为什么引入buffer缓冲块&lt;/h4&gt;&lt;p&gt;B+写放大，不能顺序写，读的性能差&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="数据库" scheme="https://zhaoyushuo123.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>高级数据库(一)</title>
    <link href="https://zhaoyushuo123.github.io/post/%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E5%BA%93-%E4%B8%80.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E5%BA%93-%E4%B8%80.html</id>
    <published>2022-03-09T03:17:26.000Z</published>
    <updated>2022-03-09T03:18:43.957Z</updated>
    
    <content type="html"><![CDATA[<p>数据库系统功能</p><p>数据存储</p><p>数据访问</p><p>形态</p><p>关系型—-》oldsql/newsql</p><p>非关系型—-》键值对/图/文档</p><p>差异</p><table><thead><tr><th>- 差异 -</th><th>- 关系 -</th><th>- 非 -</th></tr></thead><tbody><tr><td>一致性</td><td>ACID</td><td>弱</td></tr></tbody></table><p>分布式数据库/云数据库</p><p>1.性能指标</p><p>2.容错</p><p>3.正确性/数据一致性</p><p>4.实现</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;数据库系统功能&lt;/p&gt;
&lt;p&gt;数据存储&lt;/p&gt;
&lt;p&gt;数据访问&lt;/p&gt;
&lt;p&gt;形态&lt;/p&gt;
&lt;p&gt;关系型—-》oldsql/newsql&lt;/p&gt;
&lt;p&gt;非关系型—-》键值对/图/文档&lt;/p&gt;
&lt;p&gt;差异&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;- 差异 -</summary>
      
    
    
    
    
    <category term="数据库" scheme="https://zhaoyushuo123.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>2022美赛C题买入评分公式</title>
    <link href="https://zhaoyushuo123.github.io/post/2022%E7%BE%8E%E8%B5%9BC%E9%A2%98%E4%B9%B0%E5%85%A5%E8%AF%84%E5%88%86%E5%85%AC%E5%BC%8F.html"/>
    <id>https://zhaoyushuo123.github.io/post/2022%E7%BE%8E%E8%B5%9BC%E9%A2%98%E4%B9%B0%E5%85%A5%E8%AF%84%E5%88%86%E5%85%AC%E5%BC%8F.html</id>
    <published>2022-02-22T01:59:45.000Z</published>
    <updated>2022-02-22T02:00:05.284Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>- 黄金买入 -</th><th>-黄金卖出-</th><th>-B买入-</th><th>-B卖出-</th><th>-总资产-</th></tr></thead><tbody><tr><td>0.58</td><td>0.3</td><td>0.71</td><td>0.56</td><td>149993.10</td></tr><tr><td>0.6</td><td>0.3</td><td>0.65</td><td>0.55</td><td>3.391658E+07</td></tr></tbody></table><p>黄金买入=涨幅<em>10+牛</em>5-残差+1/风险</p><p>比特=涨幅<em>10+牛</em>5-残差+1/风险</p><table><thead><tr><th>- 黄金买入 -</th><th>-黄金卖出-</th><th>-B买入-</th><th>-B卖出-</th><th>-总资产-</th></tr></thead><tbody><tr><td>0.58</td><td>0.3</td><td>0.71</td><td>0.56</td><td>8808.12</td></tr><tr><td>0.6</td><td>0.3</td><td>0.65</td><td>0.55</td><td>364821.52</td></tr></tbody></table><p>黄金买入=涨幅<em>10+牛</em>6-残差+1/风险</p><p>比特=涨幅<em>10+牛</em>4-残差+1/风险</p><p>GOLDBUY = 0.6</p><p>GOLD_SELL = 0.3</p><p>B_BUY = 0.7</p><p>B_sELL = 0.5</p><p>155678.9</p>]]></content>
    
    
      
      
    <summary type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;- 黄金买入 -&lt;/th&gt;
&lt;th&gt;-黄金卖出-&lt;/th&gt;
&lt;th&gt;-B买入-&lt;/th&gt;
&lt;th&gt;-B卖出-&lt;/th&gt;
&lt;th&gt;-总资产-&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;0.58&lt;/td&gt;</summary>
      
    
    
    
    
    <category term="建模" scheme="https://zhaoyushuo123.github.io/tags/%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>lstm参数说明</title>
    <link href="https://zhaoyushuo123.github.io/post/lstm%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E.html"/>
    <id>https://zhaoyushuo123.github.io/post/lstm%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E.html</id>
    <published>2022-02-22T01:58:26.000Z</published>
    <updated>2022-02-22T01:58:45.838Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p><a href="https://blog.csdn.net/weixin_42886817/article/details/99831718">https://blog.csdn.net/weixin_42886817/article/details/99831718</a></p></li><li><pre><code>model = Sequential()model.add(LSTM(4, input_shape=(1, look_back)))model.add(Dense(1))model.compile(loss=&#39;mean_squared_error&#39;, optimizer=&#39;adam&#39;) #均方误差损失函mean_squared_errormodel.fit(trainX, trainY, epochs=100, batch_size=1, verbose=2)</code></pre></li><li><p>Sequential 模型结构： 层（layers）的线性堆栈。简单来说，它是一个简单的线性结构，没有多余分支，是多个网络层的堆叠。</p></li></ul><h4 id="input-shape-输入的形状（格式）"><a href="#input-shape-输入的形状（格式）" class="headerlink" title="input shape 输入的形状（格式）"></a>input <a href="https://so.csdn.net/so/search?q=shape&spm=1001.2101.3001.7020">shape</a> 输入的形状（格式）</h4><p>构建一个模型时，第一层需要给出期待的<code>Input shape</code> ，剩余的层次会自动判断。</p><p>complication 编译<br>在训练模型之前，您需要配置学习过程，这是通过编译方法完成的。 形式是model.compile(…)<br>它收到三个参数：</p><p>优化器（opyimizer）,可以是优化器的字符串标识符，也可以是Optimizer类的实例<br>损失函数（loss function），模型要将其最小化，可以通过字符串标识符指定，可以通过目标函数指定<br>指标（metricts）列表， 对于任何分类问题，需要将其设置为metrics = [‘accuracy’]。 度量可以是现有度量的字符串标识符或自定义度量函数。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_42886817/article/details/99831718&quot;&gt;https://blog.csdn.net/weixin_42886817/article/details/9</summary>
      
    
    
    
    
    <category term="python" scheme="https://zhaoyushuo123.github.io/tags/python/"/>
    
    <category term="lstm" scheme="https://zhaoyushuo123.github.io/tags/lstm/"/>
    
  </entry>
  
  <entry>
    <title>pip豆瓣清华源</title>
    <link href="https://zhaoyushuo123.github.io/post/pip%E8%B1%86%E7%93%A3%E6%B8%85%E5%8D%8E%E6%BA%90.html"/>
    <id>https://zhaoyushuo123.github.io/post/pip%E8%B1%86%E7%93%A3%E6%B8%85%E5%8D%8E%E6%BA%90.html</id>
    <published>2022-02-22T01:56:47.000Z</published>
    <updated>2022-02-22T01:57:06.833Z</updated>
    
    <content type="html"><![CDATA[<p>pip install tensorflow -i <a href="https://pypi.douban.com/simple">https://pypi.douban.com/simple</a><br>pip config set global.index-url <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;pip install tensorflow -i &lt;a href=&quot;https://pypi.douban.com/simple&quot;&gt;https://pypi.douban.com/simple&lt;/a&gt;&lt;br&gt;pip config set global.index-url </summary>
      
    
    
    
    
    <category term="python" scheme="https://zhaoyushuo123.github.io/tags/python/"/>
    
    <category term="pip" scheme="https://zhaoyushuo123.github.io/tags/pip/"/>
    
  </entry>
  
  <entry>
    <title>为什么安装成功但是sklearn无法import</title>
    <link href="https://zhaoyushuo123.github.io/post/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F%E4%BD%86%E6%98%AFsklearn%E6%97%A0%E6%B3%95import.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F%E4%BD%86%E6%98%AFsklearn%E6%97%A0%E6%B3%95import.html</id>
    <published>2022-02-22T01:55:14.000Z</published>
    <updated>2022-02-22T01:56:10.313Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.zhihu.com/question/424488183">https://www.zhihu.com/question/424488183</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/424488183&quot;&gt;https://www.zhihu.com/question/424488183&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="python" scheme="https://zhaoyushuo123.github.io/tags/python/"/>
    
    <category term="sklearn" scheme="https://zhaoyushuo123.github.io/tags/sklearn/"/>
    
  </entry>
  
  <entry>
    <title>利用bat批处理做启动mongodb脚本</title>
    <link href="https://zhaoyushuo123.github.io/post/%E5%88%A9%E7%94%A8bat%E6%89%B9%E5%A4%84%E7%90%86%E5%81%9A%E5%90%AF%E5%8A%A8mongodb%E8%84%9A%E6%9C%AC.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E5%88%A9%E7%94%A8bat%E6%89%B9%E5%A4%84%E7%90%86%E5%81%9A%E5%90%AF%E5%8A%A8mongodb%E8%84%9A%E6%9C%AC.html</id>
    <published>2022-02-22T01:53:46.000Z</published>
    <updated>2022-02-22T01:54:11.117Z</updated>
    
    <content type="html"><![CDATA[<p>::<a href="https://www.cnblogs.com/pingfan1990/p/4558630.html">https://www.cnblogs.com/pingfan1990/p/4558630.html</a><br>::表示在此语句后所有运行的命令都不显示命令行本身<br>@echo off<br>echo 你好<br>::进入d盘<br>D:<br>cd \DM\mongodb\MongoDB\Server\5.0\bin<br>mongod   –dbpath “E:\Data\MongoDB\data\db”</p><p>//以下是注释部分<br>::mongod  – dbpath  “E:\Data\MongoDB\data\db”</p><p>:: d:&gt; echo “this d”<br>:: d:&gt; echo “this d”<br>:: d:&gt; echo “this d”<br>:: d:&gt; echo “this d”<br>::mongod  –dbpath  “D:\Program Files\MongoDB\data”<br>::写入b.txt文件</p><p>::dir D:\Program Files\MongoDB\bin&gt;  b.txt</p><p>::pause</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;::&lt;a href=&quot;https://www.cnblogs.com/pingfan1990/p/4558630.html&quot;&gt;https://www.cnblogs.com/pingfan1990/p/4558630.html&lt;/a&gt;&lt;br&gt;::表示在此语句后所有运行的命令</summary>
      
    
    
    
    
    <category term="bat" scheme="https://zhaoyushuo123.github.io/tags/bat/"/>
    
    <category term="mongodb" scheme="https://zhaoyushuo123.github.io/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>dataframe处理datatime</title>
    <link href="https://zhaoyushuo123.github.io/post/dataframe%E5%A4%84%E7%90%86datatime.html"/>
    <id>https://zhaoyushuo123.github.io/post/dataframe%E5%A4%84%E7%90%86datatime.html</id>
    <published>2022-02-22T01:50:51.000Z</published>
    <updated>2022-02-22T01:51:48.359Z</updated>
    
    <content type="html"><![CDATA[<p>python处理日期缺失<br>1）DataFrame.reindex：调整dataframe的索引以适应新的索引<br>2） DataFrame.resample，可以对时间序列重新采样，支持补充缺失值<br><a href="https://blog.csdn.net/m0_51230647/article/details/108876200">https://blog.csdn.net/m0_51230647/article/details/108876200</a></p><p>python转换datetime和str<br><a href="https://www.jianshu.com/p/b10b8389c821">https://www.jianshu.com/p/b10b8389c821</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;python处理日期缺失&lt;br&gt;1）DataFrame.reindex：调整dataframe的索引以适应新的索引&lt;br&gt;2） DataFrame.resample，可以对时间序列重新采样，支持补充缺失值&lt;br&gt;&lt;a href=&quot;https://blog.csdn.net/</summary>
      
    
    
    
    
    <category term="python" scheme="https://zhaoyushuo123.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>建议的编程语言列表</title>
    <link href="https://zhaoyushuo123.github.io/post/%E5%BB%BA%E8%AE%AE%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%88%97%E8%A1%A8.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E5%BB%BA%E8%AE%AE%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%88%97%E8%A1%A8.html</id>
    <published>2022-02-22T01:48:57.000Z</published>
    <updated>2022-02-22T01:49:22.212Z</updated>
    
    <content type="html"><![CDATA[<p>C/C++/C#<br>python<br>java<br>go<br>rust<br>perl<br>sql<br>nodejs<br>javascript<br>typescript<br>R<br>ruby<br>Visual Basic<br>lua</p><p>hadoop<br>swift<br>matlab<br>haskell<br>php</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;C/C++/C#&lt;br&gt;python&lt;br&gt;java&lt;br&gt;go&lt;br&gt;rust&lt;br&gt;perl&lt;br&gt;sql&lt;br&gt;nodejs&lt;br&gt;javascript&lt;br&gt;typescript&lt;br&gt;R&lt;br&gt;ruby&lt;br&gt;Visual Basic&lt;br&gt;lua&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    
    <category term="编程语言" scheme="https://zhaoyushuo123.github.io/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>vmware许可证</title>
    <link href="https://zhaoyushuo123.github.io/post/vmware%E8%AE%B8%E5%8F%AF%E8%AF%81.html"/>
    <id>https://zhaoyushuo123.github.io/post/vmware%E8%AE%B8%E5%8F%AF%E8%AF%81.html</id>
    <published>2022-02-22T01:48:03.000Z</published>
    <updated>2022-02-22T01:48:27.676Z</updated>
    
    <content type="html"><![CDATA[<p>ZF3R0-FHED2-M80TY-8QYGC-NPKYF</p><p>YF390-0HF8P-M81RQ-2DXQE-M2UT6</p><p>ZF71R-DMX85-08DQY-8YMNC-PPHV8</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ZF3R0-FHED2-M80TY-8QYGC-NPKYF&lt;/p&gt;
&lt;p&gt;YF390-0HF8P-M81RQ-2DXQE-M2UT6&lt;/p&gt;
&lt;p&gt;ZF71R-DMX85-08DQY-8YMNC-PPHV8&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="vmware" scheme="https://zhaoyushuo123.github.io/tags/vmware/"/>
    
  </entry>
  
  <entry>
    <title>bat固定到开始</title>
    <link href="https://zhaoyushuo123.github.io/post/bat%E5%9B%BA%E5%AE%9A%E5%88%B0%E5%BC%80%E5%A7%8B.html"/>
    <id>https://zhaoyushuo123.github.io/post/bat%E5%9B%BA%E5%AE%9A%E5%88%B0%E5%BC%80%E5%A7%8B.html</id>
    <published>2022-02-22T01:46:17.000Z</published>
    <updated>2022-02-22T01:46:47.763Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.jb51.net/os/win10/483729.html">https://www.jb51.net/os/win10/483729.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.jb51.net/os/win10/483729.html&quot;&gt;https://www.jb51.net/os/win10/483729.html&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="windows" scheme="https://zhaoyushuo123.github.io/tags/windows/"/>
    
    <category term="bat" scheme="https://zhaoyushuo123.github.io/tags/bat/"/>
    
  </entry>
  
  <entry>
    <title>spark与hadoop</title>
    <link href="https://zhaoyushuo123.github.io/post/spark%E4%B8%8Ehadoop.html"/>
    <id>https://zhaoyushuo123.github.io/post/spark%E4%B8%8Ehadoop.html</id>
    <published>2022-02-10T14:52:22.000Z</published>
    <updated>2022-02-10T14:53:11.378Z</updated>
    
    <content type="html"><![CDATA[<p>初步了解，详看大佬文章.mark一下</p><p><a href="https://blog.csdn.net/hongxingabc/article/details/81565174">https://blog.csdn.net/hongxingabc/article/details/81565174</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;初步了解，详看大佬文章.mark一下&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/hongxingabc/article/details/81565174&quot;&gt;https://blog.csdn.net/hongxingabc/article/</summary>
      
    
    
    
    
    <category term="hadoop" scheme="https://zhaoyushuo123.github.io/tags/hadoop/"/>
    
    <category term="spark" scheme="https://zhaoyushuo123.github.io/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>vscode配置markdown</title>
    <link href="https://zhaoyushuo123.github.io/post/vscode%E9%85%8D%E7%BD%AEmarkdown.html"/>
    <id>https://zhaoyushuo123.github.io/post/vscode%E9%85%8D%E7%BD%AEmarkdown.html</id>
    <published>2022-02-07T08:50:48.000Z</published>
    <updated>2022-02-07T08:51:55.280Z</updated>
    
    <content type="html"><![CDATA[<p>目前没有找到好用的markdown内代码块的自动补全功能</p><p><a href="https://www.jianshu.com/p/a87e9ca2d208">https://www.jianshu.com/p/a87e9ca2d208</a></p><p><a href="https://blog.csdn.net/qq_36171287/article/details/118732360?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-4.pc_relevant_default&amp;spm=1001.2101.3001.4242.3&amp;utm_relevant_index=7">https://blog.csdn.net/qq_36171287/article/details/118732360?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-4.pc_relevant_default&amp;spm=1001.2101.3001.4242.3&amp;utm_relevant_index=7</a></p><p><a href="https://blog.csdn.net/fengqifly/article/details/115036991?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-1.pc_relevant_paycolumn_v3&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-1.pc_relevant_paycolumn_v3&amp;utm_relevant_index=2">https://blog.csdn.net/fengqifly/article/details/115036991?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-1.pc_relevant_paycolumn_v3&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-1.pc_relevant_paycolumn_v3&amp;utm_relevant_index=2</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;目前没有找到好用的markdown内代码块的自动补全功能&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/a87e9ca2d208&quot;&gt;https://www.jianshu.com/p/a87e9ca2d208&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a</summary>
      
    
    
    
    
    <category term="vscode" scheme="https://zhaoyushuo123.github.io/tags/vscode/"/>
    
    <category term="markdown" scheme="https://zhaoyushuo123.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>#define CRT_SECURE_NO_WARNINGS 1</title>
    <link href="https://zhaoyushuo123.github.io/post/define-CRT-SECURE-NO-WARNINGS-1.html"/>
    <id>https://zhaoyushuo123.github.io/post/define-CRT-SECURE-NO-WARNINGS-1.html</id>
    <published>2022-02-07T08:11:05.000Z</published>
    <updated>2022-02-07T08:12:51.155Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/daimasanjiaomao/p/14134020.html">https://www.cnblogs.com/daimasanjiaomao/p/14134020.html</a></p><p><a href="https://blog.csdn.net/helloworld0906/article/details/84566276">https://blog.csdn.net/helloworld0906/article/details/84566276</a></p><p>#define CRT_SECURE_NO_WARNINGS 1主要针对IDE VS起作用</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/daimasanjiaomao/p/14134020.html&quot;&gt;https://www.cnblogs.com/daimasanjiaomao/p/14134020.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a h</summary>
      
    
    
    
    
    <category term="windows" scheme="https://zhaoyushuo123.github.io/tags/windows/"/>
    
    <category term="c" scheme="https://zhaoyushuo123.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>postgresql安装问题</title>
    <link href="https://zhaoyushuo123.github.io/post/postgresql%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98.html"/>
    <id>https://zhaoyushuo123.github.io/post/postgresql%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98.html</id>
    <published>2022-02-04T05:47:48.000Z</published>
    <updated>2022-02-04T05:51:46.710Z</updated>
    
    <content type="html"><![CDATA[<p>postgresql安装问题坑有很多，大致分为三大类：</p><p>1.用户权限问题，postgresql安装时需要在windows下创建新的名为postgres的用户</p><p>2.版本问题，截至2022/2/4；windows10建议安装postgresql13版本而不用14版本</p><p>3.路径/环境变量/语言选择问题：路径中不要有空格，环境变量要在bin目录下，语言选择因人而异都试一下(直接默认即可，在pgAdmin4下可以调中文)</p><p><a href="https://www.cnblogs.com/jianxuanbing/p/9160896.html">https://www.cnblogs.com/jianxuanbing/p/9160896.html</a><br><a href="https://www.cnblogs.com/itwlp/p/12799217.html">https://www.cnblogs.com/itwlp/p/12799217.html</a><br><a href="https://blog.csdn.net/xiuxiuxiu666/article/details/107982981">https://blog.csdn.net/xiuxiuxiu666/article/details/107982981</a><br><a href="https://www.cnblogs.com/asummer/p/8671148.html">https://www.cnblogs.com/asummer/p/8671148.html</a><br><a href="https://www.bilibili.com/video/BV1bz4y1k75a?from=search&amp;seid=14886922895094291783&amp;spm_id_from=333.337.0.0">https://www.bilibili.com/video/BV1bz4y1k75a?from=search&amp;seid=14886922895094291783&amp;spm_id_from=333.337.0.0</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;postgresql安装问题坑有很多，大致分为三大类：&lt;/p&gt;
&lt;p&gt;1.用户权限问题，postgresql安装时需要在windows下创建新的名为postgres的用户&lt;/p&gt;
&lt;p&gt;2.版本问题，截至2022/2/4；windows10建议安装postgresql13版</summary>
      
    
    
    
    
    <category term="postgresql" scheme="https://zhaoyushuo123.github.io/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>打卡.py</title>
    <link href="https://zhaoyushuo123.github.io/post/%E6%89%93%E5%8D%A1-py.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E6%89%93%E5%8D%A1-py.html</id>
    <published>2022-01-31T11:27:08.000Z</published>
    <updated>2022-01-31T11:27:46.131Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#pip install pymouse</span><span class="token comment">#pip install pyUserInput</span><span class="token comment">#pip install pyperclip</span><span class="token comment">#pip install pyinstaller</span><span class="token comment">#pip install pyhook3</span><span class="token keyword">import</span> time<span class="token keyword">import</span> tkinter <span class="token keyword">as</span> tk<span class="token keyword">from</span> tkinter <span class="token keyword">import</span> ttk<span class="token punctuation">,</span> messagebox <span class="token keyword">as</span> msg<span class="token keyword">import</span> pymouse<span class="token punctuation">,</span> pykeyboard<span class="token punctuation">,</span> pyperclip<span class="token comment"># 创建用户窗口</span>mainForm <span class="token operator">=</span> tk<span class="token punctuation">.</span>Tk<span class="token punctuation">(</span><span class="token punctuation">)</span>mainForm<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'自动群发系统'</span><span class="token punctuation">)</span>mainForm<span class="token punctuation">.</span>resizable<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 输入框，用于输入要群发的用户名</span>nameText <span class="token operator">=</span> tk<span class="token punctuation">.</span>Text<span class="token punctuation">(</span>mainForm<span class="token punctuation">,</span> height<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">)</span>nameText<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token string">"在此处键入需要群发消息的名单"</span><span class="token punctuation">)</span>nameText<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>row<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> padx<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> pady<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>msgText <span class="token operator">=</span> tk<span class="token punctuation">.</span>Text<span class="token punctuation">(</span>mainForm<span class="token punctuation">,</span> height<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">)</span>msgText<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token string">"在此处键入群发的内容哦哦哦"</span><span class="token punctuation">)</span>msgText<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>row<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> padx<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> pady<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>mouseSearchXY <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>mouseInputXY <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">onClickMouseButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> mouseSearchXY<span class="token punctuation">,</span> mouseInputXY    m <span class="token operator">=</span> pymouse<span class="token punctuation">.</span>PyMouse<span class="token punctuation">(</span><span class="token punctuation">)</span>    msg<span class="token punctuation">.</span>showinfo<span class="token punctuation">(</span><span class="token string">'提示'</span><span class="token punctuation">,</span> <span class="token string">'请在点击确认后2秒内将鼠标移动到QQ的搜索框，2秒后自动获取搜索框鼠标位置。'</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    mouseSearchXY <span class="token operator">=</span> m<span class="token punctuation">.</span>position<span class="token punctuation">(</span><span class="token punctuation">)</span>    msg<span class="token punctuation">.</span>showinfo<span class="token punctuation">(</span><span class="token string">'成功'</span><span class="token punctuation">,</span> <span class="token string">'成功，请在点击确认后2秒内将鼠标移动到QQ的输入框，2秒后自动获取输入框鼠标位置。'</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    mouseInputXY <span class="token operator">=</span> m<span class="token punctuation">.</span>position<span class="token punctuation">(</span><span class="token punctuation">)</span>    msg<span class="token punctuation">.</span>showinfo<span class="token punctuation">(</span><span class="token string">'成功'</span><span class="token punctuation">,</span> <span class="token string">'任务成功完成'</span><span class="token punctuation">)</span>mouseButton <span class="token operator">=</span> ttk<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>mainForm<span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token string">'点击获取鼠标位置'</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">,</span> command<span class="token operator">=</span>onClickMouseButton<span class="token punctuation">)</span>mouseButton<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>row<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> padx<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> pady<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">onClickStartButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 判断是否已经读取鼠标位置</span>    <span class="token keyword">if</span> mouseSearchXY <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">or</span> mouseInputXY <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        msg<span class="token punctuation">.</span>showerror<span class="token punctuation">(</span><span class="token string">'错误'</span><span class="token punctuation">,</span> <span class="token string">'请先获取鼠标位置哦哦哦'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token comment"># 判断输入框有没有内容</span>    nameContent <span class="token operator">=</span> nameText<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> tk<span class="token punctuation">.</span>END<span class="token punctuation">)</span><span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> nameContent <span class="token operator">==</span> <span class="token string">'在此处键入需要群发消息的名单'</span> <span class="token keyword">or</span> nameContent <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>        msg<span class="token punctuation">.</span>showerror<span class="token punctuation">(</span><span class="token string">'错误'</span><span class="token punctuation">,</span> <span class="token string">'请先输入名单哦哦哦'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    msgContent <span class="token operator">=</span> msgText<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> tk<span class="token punctuation">.</span>END<span class="token punctuation">)</span><span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> msgContent <span class="token operator">==</span> <span class="token string">'在此处键入群发的内容哦哦哦'</span> <span class="token keyword">or</span> msgContent <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>        msg<span class="token punctuation">.</span>showerror<span class="token punctuation">(</span><span class="token string">'错误'</span><span class="token punctuation">,</span> <span class="token string">'请先输入群发的内容哦哦哦'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token comment"># 开始群发</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> msg<span class="token punctuation">.</span>askokcancel<span class="token punctuation">(</span><span class="token string">'提示'</span><span class="token punctuation">,</span> <span class="token string">'开始干活喽，在我说完成之前别动鼠标哦'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span>    m <span class="token operator">=</span> pymouse<span class="token punctuation">.</span>PyMouse<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 获取鼠标对象</span>    k <span class="token operator">=</span> pykeyboard<span class="token punctuation">.</span>PyKeyboard<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 获取键盘对象</span>    lst <span class="token operator">=</span> nameContent<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> lst<span class="token punctuation">:</span>        m<span class="token punctuation">.</span>click<span class="token punctuation">(</span>mouseSearchXY<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> mouseSearchXY<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        pyperclip<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>i<span class="token punctuation">)</span>        k<span class="token punctuation">.</span>press_key<span class="token punctuation">(</span>k<span class="token punctuation">.</span>control_key<span class="token punctuation">)</span>        k<span class="token punctuation">.</span>tap_key<span class="token punctuation">(</span><span class="token string">'v'</span><span class="token punctuation">)</span>        k<span class="token punctuation">.</span>release_key<span class="token punctuation">(</span>k<span class="token punctuation">.</span>control_key<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>        k<span class="token punctuation">.</span>tap_key<span class="token punctuation">(</span>k<span class="token punctuation">.</span>enter_key<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>        k<span class="token punctuation">.</span>tap_key<span class="token punctuation">(</span>k<span class="token punctuation">.</span>enter_key<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>        m<span class="token punctuation">.</span>click<span class="token punctuation">(</span>mouseInputXY<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> mouseInputXY<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        pyperclip<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>msgContent<span class="token punctuation">)</span>        k<span class="token punctuation">.</span>press_key<span class="token punctuation">(</span>k<span class="token punctuation">.</span>control_key<span class="token punctuation">)</span>        k<span class="token punctuation">.</span>tap_key<span class="token punctuation">(</span><span class="token string">'v'</span><span class="token punctuation">)</span>        k<span class="token punctuation">.</span>release_key<span class="token punctuation">(</span>k<span class="token punctuation">.</span>control_key<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>        k<span class="token punctuation">.</span>tap_key<span class="token punctuation">(</span>k<span class="token punctuation">.</span>enter_key<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>    msg<span class="token punctuation">.</span>showinfo<span class="token punctuation">(</span><span class="token string">'提示'</span><span class="token punctuation">,</span> <span class="token string">'任务成功完成！'</span><span class="token punctuation">)</span>startButton <span class="token operator">=</span> ttk<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>mainForm<span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token string">'启动'</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">,</span> command<span class="token operator">=</span>onClickStartButton<span class="token punctuation">)</span>startButton<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>row<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> padx<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> pady<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>mainForm<span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;#pip install pymo</summary>
      
    
    
    
    
    <category term="应用程序" scheme="https://zhaoyushuo123.github.io/tags/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>windows下配置c++环境</title>
    <link href="https://zhaoyushuo123.github.io/post/windows%E4%B8%8B%E9%85%8D%E7%BD%AEc-%E7%8E%AF%E5%A2%83.html"/>
    <id>https://zhaoyushuo123.github.io/post/windows%E4%B8%8B%E9%85%8D%E7%BD%AEc-%E7%8E%AF%E5%A2%83.html</id>
    <published>2022-01-27T12:23:45.000Z</published>
    <updated>2022-01-27T12:25:46.453Z</updated>
    
    <content type="html"><![CDATA[<p>gcc—-&gt;c—&gt;.c<br>g++—-?c++–&gt;.cpp<br>这个链接下很详细<br><a href="https://blog.csdn.net/justidle/article/details/105845768">https://blog.csdn.net/justidle/article/details/105845768</a><br>可参考<br><a href="https://code.visualstudio.com/docs/cpp/config-mingw">https://code.visualstudio.com/docs/cpp/config-mingw</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;gcc—-&amp;gt;c—&amp;gt;.c&lt;br&gt;g++—-?c++–&amp;gt;.cpp&lt;br&gt;这个链接下很详细&lt;br&gt;&lt;a href=&quot;https://blog.csdn.net/justidle/article/details/105845768&quot;&gt;https://blog.cs</summary>
      
    
    
    
    
    <category term="windows" scheme="https://zhaoyushuo123.github.io/tags/windows/"/>
    
    <category term="vscode" scheme="https://zhaoyushuo123.github.io/tags/vscode/"/>
    
    <category term="c/c++" scheme="https://zhaoyushuo123.github.io/tags/c-c/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu换源</title>
    <link href="https://zhaoyushuo123.github.io/post/ubuntu%E6%8D%A2%E6%BA%90.html"/>
    <id>https://zhaoyushuo123.github.io/post/ubuntu%E6%8D%A2%E6%BA%90.html</id>
    <published>2022-01-18T01:36:15.000Z</published>
    <updated>2022-01-18T01:38:05.760Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/Powerking666/article/details/120601812">https://blog.csdn.net/Powerking666/article/details/120601812</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/Powerking666/article/details/120601812&quot;&gt;https://blog.csdn.net/Powerking666/article/details/120601812&lt;/a&gt;&lt;/</summary>
      
    
    
    
    
    <category term="ubuntu" scheme="https://zhaoyushuo123.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>朴素贝叶斯</title>
    <link href="https://zhaoyushuo123.github.io/post/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF.html</id>
    <published>2021-12-30T13:19:23.000Z</published>
    <updated>2021-12-30T13:22:52.695Z</updated>
    
    <content type="html"><![CDATA[<p>这里是朴素贝叶斯的理论概述</p><p><a href="https://blog.csdn.net/qq_17073497/article/details/81076250">https://blog.csdn.net/qq_17073497/article/details/81076250</a></p><p>对应的，在python3.9，windows10，pycharm实现朴素贝叶斯分类器对文件标签分类</p><p>使用sklearn包</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> io<span class="token keyword">from</span> sklearn <span class="token keyword">import</span> metrics<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>naive_bayes <span class="token keyword">import</span> MultinomialNB<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>feature_extraction<span class="token punctuation">.</span>text <span class="token keyword">import</span> TfidfVectorizerstart <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span><span class="token string">r'D:/Jupyter/信息检索/E4/Tr'</span><span class="token punctuation">)</span><span class="token comment"># start = os.listdir(r'/content/drive/MyDrive/信息检索/E4/train')</span>test_path <span class="token operator">=</span> <span class="token string">'D:/Jupyter/信息检索/E4/test-all-in-one'</span> <span class="token operator">+</span> <span class="token string">'/'</span><span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>test_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># print(file)</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>test_path <span class="token operator">+</span> <span class="token builtin">file</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"GBK"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>          line <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>              <span class="token keyword">break</span>          L <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token keyword">for</span> word <span class="token keyword">in</span> L<span class="token punctuation">:</span>              <span class="token comment"># test_contents.append(word)</span>              <span class="token comment"># print(test_contents)</span>              result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>word<span class="token punctuation">)</span>              <span class="token comment"># print(test_contents)</span>              <span class="token comment"># result.append(item)</span>              <span class="token comment"># print(test_labels)</span>        test_contents<span class="token punctuation">.</span>append<span class="token punctuation">(</span>result<span class="token punctuation">)</span>        <span class="token comment"># print(test_contents)</span>        test_labels<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span>        <span class="token comment"># print(test_labels)</span><span class="token keyword">for</span> item <span class="token keyword">in</span> start<span class="token punctuation">:</span>    train_path <span class="token operator">=</span> <span class="token string">'D:/Jupyter/信息检索/E4/Tr/'</span> <span class="token operator">+</span> item <span class="token operator">+</span> <span class="token string">'/'</span>    <span class="token comment"># train_path = '/content/drive/MyDrive/信息检索/E4/train/' + item + '/'</span>    Result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>train_path<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>train_path <span class="token operator">+</span> <span class="token builtin">file</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'gb18030'</span><span class="token punctuation">,</span> errors<span class="token operator">=</span><span class="token string">'ignore'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>              line <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                  <span class="token keyword">break</span>              L <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token keyword">for</span> word <span class="token keyword">in</span> L<span class="token punctuation">:</span>                  Result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>word<span class="token punctuation">)</span>                  <span class="token comment"># print(test_contents)</span>                  <span class="token comment"># Result.append(item)</span>                  <span class="token comment"># print(test_labels)</span>            train_contents<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Result<span class="token punctuation">)</span>            <span class="token comment"># print(test_contents)</span>            train_labels<span class="token punctuation">.</span>append<span class="token punctuation">(</span>item<span class="token punctuation">)</span>            <span class="token comment"># print(test_labels)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>train_contents<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>test_contents<span class="token punctuation">)</span><span class="token punctuation">)</span>train<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>test<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>test_contents<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  test<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>test_contents<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># print(test)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>train_contents<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  train<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>train_contents<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># print(train[0])</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>train<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># tfidf_vec = TfidfVectorizer()</span>stop_words <span class="token operator">=</span> <span class="token punctuation">[</span>line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> line <span class="token keyword">in</span> io<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'D:/Jupyter/信息检索/E4/stopword.txt'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>stop_words<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 计算tf-idf向量的值</span><span class="token comment"># tf = TfidfVectorizer(tokenizer=nltk.word_tokenize, stop_words=stop_words, max_df=0.9)</span>tf <span class="token operator">=</span> TfidfVectorizer<span class="token punctuation">(</span>stop_words<span class="token operator">=</span>stop_words<span class="token punctuation">,</span> max_df<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">)</span>train_features <span class="token operator">=</span> tf<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>train<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>train_features<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token comment"># print(train_features)</span><span class="token comment"># 多项式贝叶斯分类器</span><span class="token comment"># clf = MultinomialNB(alpha=0.001).fit(train_features, train_labels) # Lidstone平滑</span>clf <span class="token operator">=</span> MultinomialNB<span class="token punctuation">(</span>alpha<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_features<span class="token punctuation">,</span> train_labels<span class="token punctuation">)</span> <span class="token comment"># Laplace平滑</span><span class="token keyword">print</span><span class="token punctuation">(</span>clf<span class="token punctuation">)</span><span class="token comment"># 预测</span><span class="token comment"># test_tf = TfidfVectorizer(tokenizer=nltk.word_tokenize, stop_words=stop_words, max_df=0.5, vocabulary=tf.vocabulary_)</span>test_tf <span class="token operator">=</span> TfidfVectorizer<span class="token punctuation">(</span>stop_words<span class="token operator">=</span>stop_words<span class="token punctuation">,</span> max_df<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">,</span> vocabulary<span class="token operator">=</span>tf<span class="token punctuation">.</span>vocabulary_<span class="token punctuation">)</span>test_features <span class="token operator">=</span> test_tf<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>test_features<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token comment"># print(test_features)</span><span class="token comment"># predict 求解所有后验概率并找出最大的那个。</span>predicted_labels <span class="token operator">=</span> clf<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_features<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>predicted_labels<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>predicted_labels<span class="token punctuation">)</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'D:/Jupyter/信息检索/E4/pred.txt'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>predicted_labels<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"%s:%s"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>test_labels<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>predicted_labels<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>    f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实现时应当自己手撸tfidf</p><p>引文python32的列表元素个数存储量不支持</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这里是朴素贝叶斯的理论概述&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_17073497/article/details/81076250&quot;&gt;https://blog.csdn.net/qq_17073497/article/detai</summary>
      
    
    
    
    
    <category term="机器学习" scheme="https://zhaoyushuo123.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
</feed>
