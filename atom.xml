<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://zhaoyushuo123.github.io/atom.xml" rel="self"/>
  
  <link href="https://zhaoyushuo123.github.io/"/>
  <updated>2021-12-24T07:53:41.636Z</updated>
  <id>https://zhaoyushuo123.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>pytorch安装教程</title>
    <link href="https://zhaoyushuo123.github.io/post/pytorch%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B.html"/>
    <id>https://zhaoyushuo123.github.io/post/pytorch%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B.html</id>
    <published>2021-12-24T07:53:02.000Z</published>
    <updated>2021-12-24T07:53:41.636Z</updated>
    
    <content type="html"><![CDATA[<p>安装pytorch前需要安装cuda</p><p>N卡特权</p><p><a href="https://blog.csdn.net/NSJim/article/details/115408138">https://blog.csdn.net/NSJim/article/details/115408138</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;安装pytorch前需要安装cuda&lt;/p&gt;
&lt;p&gt;N卡特权&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/NSJim/article/details/115408138&quot;&gt;https://blog.csdn.net/NSJim/article</summary>
      
    
    
    
    
    <category term="python" scheme="https://zhaoyushuo123.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>文本摘要实验</title>
    <link href="https://zhaoyushuo123.github.io/post/%E6%96%87%E6%9C%AC%E6%91%98%E8%A6%81%E5%AE%9E%E9%AA%8C.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E6%96%87%E6%9C%AC%E6%91%98%E8%A6%81%E5%AE%9E%E9%AA%8C.html</id>
    <published>2021-12-24T07:50:16.000Z</published>
    <updated>2021-12-24T07:52:14.924Z</updated>
    
    <content type="html"><![CDATA[<p>以下是参考</p><p>文本摘要实验</p><p>首先写爬虫爬取新闻</p><p>然后根据爬取的内容做分词</p><p>使用最大覆盖问题的解决思路提炼文本摘要</p><p><a href="https://blog.csdn.net/qq_33722172/article/details/82469050">https://blog.csdn.net/qq_33722172/article/details/82469050</a></p><p><a href="https://www.52pojie.cn/thread-1103864-1-1.html">https://www.52pojie.cn/thread-1103864-1-1.html</a></p><p><a href="https://blog.csdn.net/qq_41776239/article/details/121359151">https://blog.csdn.net/qq_41776239/article/details/121359151</a></p><p><a href="https://blog.csdn.net/Thefreelittle/article/details/121342813?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-1.no_search_link&amp;spm=1001.2101.3001.4242.2">https://blog.csdn.net/Thefreelittle/article/details/121342813?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-1.no_search_link&amp;spm=1001.2101.3001.4242.2</a></p><p>后续会将实验源码上传并附上链接</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;以下是参考&lt;/p&gt;
&lt;p&gt;文本摘要实验&lt;/p&gt;
&lt;p&gt;首先写爬虫爬取新闻&lt;/p&gt;
&lt;p&gt;然后根据爬取的内容做分词&lt;/p&gt;
&lt;p&gt;使用最大覆盖问题的解决思路提炼文本摘要&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_33722172/art</summary>
      
    
    
    
    
    <category term="project" scheme="https://zhaoyushuo123.github.io/tags/project/"/>
    
  </entry>
  
  <entry>
    <title>python+flask+mysql下实现一个请求修改多表</title>
    <link href="https://zhaoyushuo123.github.io/post/python-flask-mysql%E4%B8%8B%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E8%AF%B7%E6%B1%82%E4%BF%AE%E6%94%B9%E5%A4%9A%E8%A1%A8.html"/>
    <id>https://zhaoyushuo123.github.io/post/python-flask-mysql%E4%B8%8B%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E8%AF%B7%E6%B1%82%E4%BF%AE%E6%94%B9%E5%A4%9A%E8%A1%A8.html</id>
    <published>2021-12-14T01:28:07.000Z</published>
    <updated>2021-12-15T00:27:43.439Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">insert_one_book_info</span><span class="token punctuation">(</span>connection<span class="token punctuation">,</span> cursor<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>初始book_id<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>query<span class="token operator">=</span>mysql查询语句<span class="token keyword">try</span><span class="token punctuation">:</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>query<span class="token punctuation">)</span>获取book_id<span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span><span class="token keyword">print</span>rollback<span class="token keyword">if</span> book_id<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">:</span>book_label <span class="token operator">=</span> attendbooklabel<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>insert_one_into_booknumber_attendbooklabel<span class="token punctuation">(</span>model<span class="token operator">=</span>book_label<span class="token punctuation">)</span><span class="token keyword">return</span> book_id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实现级联查询</p><p><a href="https://www.cnblogs.com/hello-/articles/13167185.html">https://www.cnblogs.com/hello-/articles/13167185.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span </summary>
      
    
    
    
    
    <category term="mysql" scheme="https://zhaoyushuo123.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://zhaoyushuo123.github.io/post/test.html"/>
    <id>https://zhaoyushuo123.github.io/post/test.html</id>
    <published>2021-12-10T07:10:19.000Z</published>
    <updated>2021-12-10T07:25:38.001Z</updated>
    
    <content type="html"><![CDATA[<p>这只是一个test文件</p><p>2021-12-10 15:10</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这只是一个test文件&lt;/p&gt;
&lt;p&gt;2021-12-10 15:10&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="test" scheme="https://zhaoyushuo123.github.io/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>接口测试</title>
    <link href="https://zhaoyushuo123.github.io/post/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95.html</id>
    <published>2021-12-10T02:11:47.000Z</published>
    <updated>2021-12-10T02:20:12.779Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-接口测试的目的"><a href="#1-接口测试的目的" class="headerlink" title="1.接口测试的目的"></a>1.接口测试的目的</h3><h3 id="2-什么是标准的接口测试"><a href="#2-什么是标准的接口测试" class="headerlink" title="2.什么是标准的接口测试"></a>2.什么是标准的接口测试</h3><h3 id="3-什么时候做接口加密"><a href="#3-什么时候做接口加密" class="headerlink" title="3.什么时候做接口加密"></a>3.什么时候做接口加密</h3><h3 id="4-接口测试的类型"><a href="#4-接口测试的类型" class="headerlink" title="4.接口测试的类型"></a>4.接口测试的类型</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-接口测试的目的&quot;&gt;&lt;a href=&quot;#1-接口测试的目的&quot; class=&quot;headerlink&quot; title=&quot;1.接口测试的目的&quot;&gt;&lt;/a&gt;1.接口测试的目的&lt;/h3&gt;&lt;h3 id=&quot;2-什么是标准的接口测试&quot;&gt;&lt;a href=&quot;#2-什么是标准的接口测试&quot;</summary>
      
    
    
    
    
    <category term="jmeter" scheme="https://zhaoyushuo123.github.io/tags/jmeter/"/>
    
    <category term="接口测试" scheme="https://zhaoyushuo123.github.io/tags/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>jmeter入门</title>
    <link href="https://zhaoyushuo123.github.io/post/jmeter%E5%85%A5%E9%97%A8.html"/>
    <id>https://zhaoyushuo123.github.io/post/jmeter%E5%85%A5%E9%97%A8.html</id>
    <published>2021-12-10T02:02:41.000Z</published>
    <updated>2021-12-10T02:11:00.854Z</updated>
    
    <content type="html"><![CDATA[<p>jmeter是基于java实现的，要在装有java的环境下才能运行</p><p>可以直接使用jmeter的离线包</p><p>在apache-jmeter-5.4.1/bin/  目录下启动jmeter.bat</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;jmeter是基于java实现的，要在装有java的环境下才能运行&lt;/p&gt;
&lt;p&gt;可以直接使用jmeter的离线包&lt;/p&gt;
&lt;p&gt;在apache-jmeter-5.4.1/bin/  目录下启动jmeter.bat&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="jmeter" scheme="https://zhaoyushuo123.github.io/tags/jmeter/"/>
    
  </entry>
  
  <entry>
    <title>cmd和powershell的区别</title>
    <link href="https://zhaoyushuo123.github.io/post/cmd%E5%92%8Cpowershell%E7%9A%84%E5%8C%BA%E5%88%AB.html"/>
    <id>https://zhaoyushuo123.github.io/post/cmd%E5%92%8Cpowershell%E7%9A%84%E5%8C%BA%E5%88%AB.html</id>
    <published>2021-12-09T12:19:55.000Z</published>
    <updated>2021-12-09T12:25:02.320Z</updated>
    
    <content type="html"><![CDATA[<p>简单来说powershell是cmd的超集</p><p>mklink在powershell下需要更多权限设置</p><p>一般来说，cmd能做的事情，powershell都可以做</p><p>powershell是基于.net的，它是专为系统管理员设计的信windows命令上shell。</p><p>windwos powershell包括交互式提示和脚本环境，两者可以独立使用也可以使组合使用。</p><p>powershell是全平台的，cmd是windows专享的</p><p>这个和CLR有关</p><p>另外的git命令有CRLF语法</p><p>提交时转换为LF,检出时转换为CRLF</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;简单来说powershell是cmd的超集&lt;/p&gt;
&lt;p&gt;mklink在powershell下需要更多权限设置&lt;/p&gt;
&lt;p&gt;一般来说，cmd能做的事情，powershell都可以做&lt;/p&gt;
&lt;p&gt;powershell是基于.net的，它是专为系统管理员设计的信window</summary>
      
    
    
    
    
    <category term="windows" scheme="https://zhaoyushuo123.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>B树</title>
    <link href="https://zhaoyushuo123.github.io/post/B%E6%A0%91.html"/>
    <id>https://zhaoyushuo123.github.io/post/B%E6%A0%91.html</id>
    <published>2021-12-09T12:15:20.000Z</published>
    <updated>2021-12-09T12:18:33.958Z</updated>
    
    <content type="html"><![CDATA[<p>2021年11月实现了B树索引</p><p>B树的基本结构介绍：</p><p>​    参数M</p><p>​    每个节点存有M个数</p><p>​    假设M=3</p><p>​    m1=10,m2=15,m3=20</p><p>​    那么该节点有至多4个叶子节点，分别为至于三个数两侧</p><p>B+树：</p><p>​    在B树的基础上，使得所有的数据存在于叶子节点，非叶子节点的部分实现冗余，作为额外的搜索</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2021年11月实现了B树索引&lt;/p&gt;
&lt;p&gt;B树的基本结构介绍：&lt;/p&gt;
&lt;p&gt;​    参数M&lt;/p&gt;
&lt;p&gt;​    每个节点存有M个数&lt;/p&gt;
&lt;p&gt;​    假设M=3&lt;/p&gt;
&lt;p&gt;​    m1=10,m2=15,m3=20&lt;/p&gt;
&lt;p&gt;​    那么该节点</summary>
      
    
    
    
    
    <category term="信息检索" scheme="https://zhaoyushuo123.github.io/tags/%E4%BF%A1%E6%81%AF%E6%A3%80%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>hexo多标签以及分级目录设置方法举例</title>
    <link href="https://zhaoyushuo123.github.io/post/hexo%E5%A4%9A%E6%A0%87%E7%AD%BE%E4%BB%A5%E5%8F%8A%E5%88%86%E7%BA%A7%E7%9B%AE%E5%BD%95%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%B3%95%E4%B8%BE%E4%BE%8B.html"/>
    <id>https://zhaoyushuo123.github.io/post/hexo%E5%A4%9A%E6%A0%87%E7%AD%BE%E4%BB%A5%E5%8F%8A%E5%88%86%E7%BA%A7%E7%9B%AE%E5%BD%95%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%B3%95%E4%B8%BE%E4%BE%8B.html</id>
    <published>2021-12-08T16:08:47.000Z</published>
    <updated>2021-12-08T16:09:03.377Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/d3bf46814f3e">https://www.jianshu.com/p/d3bf46814f3e</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/d3bf46814f3e&quot;&gt;https://www.jianshu.com/p/d3bf46814f3e&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="hexo" scheme="https://zhaoyushuo123.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>初入smartide</title>
    <link href="https://zhaoyushuo123.github.io/post/%E5%88%9D%E5%85%A5smartide.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E5%88%9D%E5%85%A5smartide.html</id>
    <published>2021-12-08T16:04:18.000Z</published>
    <updated>2021-12-08T16:17:11.426Z</updated>
    
    <content type="html"><![CDATA[<p>这是smartide的官方网址，其是基于docker开发的</p><p><a href="https://www.smartide.cn/zh/">https://www.smartide.cn/zh/</a></p><p>因为docker默认要使用C盘较大容量，所以尝试把docker的默认路径设置在D盘的programfiles下并且用mklink命令链路到C盘；而且将docker-desktop-data的路径更改到D盘的wsl下(使用docker命令管理工具)；而且将linux(ubuntu)安装到E盘Linux目录下并链路到C盘appdata/local/packages目录下；而且在powershell安装smartide时cd到E:\Daima\smartide目录下执行</p><p>注意：请不要在默认的powershell路径下执行smartide，因为windwos/system32有可能会阻止你对相应工程目录的增删改操作，在构建smartide工程目录时，应该在根目录下含有smartide.msi该包</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这是smartide的官方网址，其是基于docker开发的&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.smartide.cn/zh/&quot;&gt;https://www.smartide.cn/zh/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;因为docker默认要使用C盘较大容量，所以尝</summary>
      
    
    
    
    
    <category term="docker" scheme="https://zhaoyushuo123.github.io/tags/docker/"/>
    
    <category term="smartide" scheme="https://zhaoyushuo123.github.io/tags/smartide/"/>
    
  </entry>
  
  <entry>
    <title>windows下ubuntu安装位置迁移</title>
    <link href="https://zhaoyushuo123.github.io/post/windows%E4%B8%8Bubuntu%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AE%E8%BF%81%E7%A7%BB.html"/>
    <id>https://zhaoyushuo123.github.io/post/windows%E4%B8%8Bubuntu%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AE%E8%BF%81%E7%A7%BB.html</id>
    <published>2021-12-08T16:01:47.000Z</published>
    <updated>2021-12-08T16:02:12.518Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_41472037/article/details/109157329">https://blog.csdn.net/qq_41472037/article/details/109157329</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_41472037/article/details/109157329&quot;&gt;https://blog.csdn.net/qq_41472037/article/details/109157329&lt;/a&gt;&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="ubuntu" scheme="https://zhaoyushuo123.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>MEGA密匙</title>
    <link href="https://zhaoyushuo123.github.io/post/MEGA%E5%AF%86%E5%8C%99.html"/>
    <id>https://zhaoyushuo123.github.io/post/MEGA%E5%AF%86%E5%8C%99.html</id>
    <published>2021-12-08T16:00:38.000Z</published>
    <updated>2021-12-08T16:00:58.618Z</updated>
    
    <content type="html"><![CDATA[<p>612nDv82iGyiyobrbI1WyQ</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;612nDv82iGyiyobrbI1WyQ&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="MEGA" scheme="https://zhaoyushuo123.github.io/tags/MEGA/"/>
    
  </entry>
  
  <entry>
    <title>如何更改docker位置</title>
    <link href="https://zhaoyushuo123.github.io/post/%E5%A6%82%E4%BD%95%E6%9B%B4%E6%94%B9docker%E4%BD%8D%E7%BD%AE.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E5%A6%82%E4%BD%95%E6%9B%B4%E6%94%B9docker%E4%BD%8D%E7%BD%AE.html</id>
    <published>2021-12-08T15:58:58.000Z</published>
    <updated>2021-12-08T16:00:02.176Z</updated>
    
    <content type="html"><![CDATA[<p>修改docker的镜像存储位置</p><p><a href="https://blog.csdn.net/u013948858/article/details/111464534">https://blog.csdn.net/u013948858/article/details/111464534</a></p><p>如何更改docker的位置</p><p><a href="https://www.zhihu.com/question/359332823/answer/1597619657">https://www.zhihu.com/question/359332823/answer/1597619657</a><br>全网找，也找不到答案。docker官网有人问这个问题，也没有官方答复。<br>不过，有个网友的答案，我试了一下成功了。<br>用管理员身份打开cmd窗口，然后运行命令：mklink /j “C:\Program Files\Docker” “D:\Program Files\Docker”，在此之前要先创建”D:\Program Files\Docker”目录。最后安装docker就可以了</p><p>作者：nobody<br>链接：<a href="https://www.zhihu.com/question/359332823/answer/1597619657">https://www.zhihu.com/question/359332823/answer/1597619657</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>下面有docker分发版本迁移的说明</p><p><a href="https://blog.csdn.net/lee_jackgg/article/details/106738878?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~default-1.fixedcolumn&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~default-1.fixedcolumn">https://blog.csdn.net/lee_jackgg/article/details/106738878?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.fixedcolumn&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.fixedcolumn</a></p><p><a href="https://www.cnblogs.com/xhznl/p/13184398.html">https://www.cnblogs.com/xhznl/p/13184398.html</a></p><p>这是更完善的教程<br><a href="https://blog.csdn.net/u013948858/article/details/111464534">https://blog.csdn.net/u013948858/article/details/111464534</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;修改docker的镜像存储位置&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/u013948858/article/details/111464534&quot;&gt;https://blog.csdn.net/u013948858/article/deta</summary>
      
    
    
    
    
    <category term="docker" scheme="https://zhaoyushuo123.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>设置cmd默认由管理员打开</title>
    <link href="https://zhaoyushuo123.github.io/post/%E8%AE%BE%E7%BD%AEcmd%E9%BB%98%E8%AE%A4%E7%94%B1%E7%AE%A1%E7%90%86%E5%91%98%E6%89%93%E5%BC%80.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E8%AE%BE%E7%BD%AEcmd%E9%BB%98%E8%AE%A4%E7%94%B1%E7%AE%A1%E7%90%86%E5%91%98%E6%89%93%E5%BC%80.html</id>
    <published>2021-12-08T15:54:55.000Z</published>
    <updated>2021-12-08T15:57:32.221Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_41494557/article/details/117329641">https://blog.csdn.net/qq_41494557/article/details/117329641</a></p><p>从快捷方式入手</p><p>打开cmd目录，右击，属性，设置为管理员打开</p><p>重启cmd</p><p>部分命令如mklink只能在cmd管理员模式下运行，powershell并不支持</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_41494557/article/details/117329641&quot;&gt;https://blog.csdn.net/qq_41494557/article/details/117329641&lt;/a&gt;&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="windows" scheme="https://zhaoyushuo123.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>IGCSE国际考二</title>
    <link href="https://zhaoyushuo123.github.io/post/IGCSE%E5%9B%BD%E9%99%85%E8%80%83%E4%BA%8C.html"/>
    <id>https://zhaoyushuo123.github.io/post/IGCSE%E5%9B%BD%E9%99%85%E8%80%83%E4%BA%8C.html</id>
    <published>2021-12-07T02:06:25.000Z</published>
    <updated>2021-12-07T02:06:26.193Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>IGCSE国际考一</title>
    <link href="https://zhaoyushuo123.github.io/post/IGCSE%E5%9B%BD%E9%99%85%E8%80%83%E4%B8%80.html"/>
    <id>https://zhaoyushuo123.github.io/post/IGCSE%E5%9B%BD%E9%99%85%E8%80%83%E4%B8%80.html</id>
    <published>2021-12-07T01:14:53.000Z</published>
    <updated>2021-12-07T01:16:10.480Z</updated>
    
    <content type="html"><![CDATA[<p>﻿﻿IGCSE国际考<br>计算机理论基础课程</p><h2 id="第一节"><a href="#第一节" class="headerlink" title="第一节"></a>第一节</h2><p>二进制(Binary Systems)</p><h4 id="1-1"><a href="#1-1" class="headerlink" title="1.1"></a>1.1</h4><p>计算机的核心硬件：</p><p>   中央处理器CPU<br>   内存Memory<br>   硬盘Hard disc<br>   显卡 Graphics card</p><h4 id="1-2-1"><a href="#1-2-1" class="headerlink" title="1.2.1"></a>1.2.1</h4><p>计算机在硬件之间传送数据信号采用的是电平信号<br>并且只有两种：<br>  高电平    用1表示<br>  低电平    用0表示<br>电平指的是电压范围，规定<br>输出高电平&gt;2.4V<br>输出低电平&lt;0.4v</p><h4 id="1-2-2"><a href="#1-2-2" class="headerlink" title="1.2.2"></a>1.2.2</h4><p>为什么只有两种电平信号？<br>  精确度，不容易因为硬件的故障损失产生误差<br>  不会因为电路硬件问题导致输出的信号变弱而使得接收者接受了错误的信号</p><h2 id="第二节"><a href="#第二节" class="headerlink" title="第二节"></a>第二节</h2><p>内存的储存单位</p><p> 位bit<br> 一个二进制数据的内存空间<br>bit只能保存一个二进制数，并且值只有0或1两种<br>字节byte<br>8bit == 1byte<br>通常情况下一个英文字符，一个整数数字都是占用一个字节。<br>长整数，浮点数，汉子等占用两个字节。</p><p>例:一个内存里的16位二进制数 00000101  00000111，转化为10进制应该是两个数字5和 7   </p><h2 id="第三节"><a href="#第三节" class="headerlink" title="第三节"></a>第三节</h2><p>存储单位<br>1kb==1024byte<br>1mb==1024kb==1048576byte<br>1gb==1024m<br>1tb==1024g</p><p>1024 ==2^10</p><p>q</p><h2 id="第四节"><a href="#第四节" class="headerlink" title="第四节"></a>第四节</h2><p>十六进制十进制和二进制转换表</p><p>0＝＝0＝＝0000<br>1＝＝1＝＝0001<br>2＝＝2＝＝0010<br>3＝＝3＝＝0011<br>4＝＝4＝＝0100<br>5＝＝5＝＝0101<br>6＝＝6＝＝0110<br>7＝＝7＝＝0111<br>8＝＝8＝＝1000<br>9＝＝9＝＝1001<br>A＝＝10＝＝1010<br>B＝＝11＝＝1011<br>C＝＝12＝＝1100<br>D＝＝13＝＝1101<br>E＝＝14＝＝1110<br>F＝＝15＝＝1111</p><p>例题：<br>3FA  == 768  +  240 +10 ==1018</p><p>十六进制的应用<br>物理地址  即  MAC地址<br>是我们网卡的唯一编码</p><p>RGB系统 采用6位十六进制<br>html开发中 </p><h1 id="FF-00-00-红色"><a href="#FF-00-00-红色" class="headerlink" title="FF 00 00 红色"></a>FF 00 00 红色</h1><h1 id="00-FF-00-绿色"><a href="#00-FF-00-绿色" class="headerlink" title="00 FF 00 绿色"></a>00 FF 00 绿色</h1><h1 id="00-00-FF-蓝色"><a href="#00-00-FF-蓝色" class="headerlink" title="00 00 FF 蓝色"></a>00 00 FF 蓝色</h1><p>汇编语言(Assembly Code):STO FFA4<br>机器语言 </p><h2 id="第五节"><a href="#第五节" class="headerlink" title="第五节"></a>第五节</h2><p>逻辑门<br>逻辑电路 Logic Gates,Logic circuits<br>逻辑电路是数字电路中最基本的逻辑元件。<br>门是一种开关，它能按照一定的条件去控制信号的通过或者不通过。</p><p>电路的输入和输出之间，存在一定的逻辑关系(因果关系)。<br>所以逻辑电路称为逻辑门电路。</p><p>基础的逻辑关系有三种：<br>  与 and<br>  或 or<br>  非 not</p><p>nand ：两个都是1时，为0。其他时候都是 1。先算 and后算not<br>nor：先算or再算not<br>xor：（异或） a和b相同是为0，a和b不同时为1。</p><h2 id="第六节"><a href="#第六节" class="headerlink" title="第六节"></a>第六节</h2><p>逻辑电路 Logic Circuit</p><p>三角右弧为AND</p><p>三角右弧左变弧为OR </p><p>三角右加圈为NOT</p><p>AND右加圈为NAND</p><p>三角右弧左变弧右加圈为NOR</p><p>三角右弧左变弧左加弧为XOR</p><h2 id="第七节"><a href="#第七节" class="headerlink" title="第七节"></a>第七节</h2><p>输入设备</p><p>keyboards键盘</p><p>pointing devices点击设备</p><p>scanners扫描仪</p><p>bar code reader条码 QR reader二维码</p><p>digital camera数码相机</p><p>touch screen触摸屏</p><p>interactive whiteboards交互白板</p><p>sensors 传感器</p><h2 id="第八节"><a href="#第八节" class="headerlink" title="第八节"></a>第八节</h2><p>输出设备</p><p>printers打印机</p><p>loudspeaker/headphone 扬声器，耳麦</p><p>monitors 显示器</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;﻿﻿IGCSE国际考&lt;br&gt;计算机理论基础课程&lt;/p&gt;
&lt;h2 id=&quot;第一节&quot;&gt;&lt;a href=&quot;#第一节&quot; class=&quot;headerlink&quot; title=&quot;第一节&quot;&gt;&lt;/a&gt;第一节&lt;/h2&gt;&lt;p&gt;二进制(Binary Systems)&lt;/p&gt;
&lt;h4 id=&quot;1-1</summary>
      
    
    
    
    
    <category term="知识" scheme="https://zhaoyushuo123.github.io/tags/%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>初试bat和vbs自启脚本</title>
    <link href="https://zhaoyushuo123.github.io/post/%E5%88%9D%E8%AF%95bat%E5%92%8Cvbs%E8%87%AA%E5%90%AF%E8%84%9A%E6%9C%AC.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E5%88%9D%E8%AF%95bat%E5%92%8Cvbs%E8%87%AA%E5%90%AF%E8%84%9A%E6%9C%AC.html</id>
    <published>2021-12-03T09:10:21.000Z</published>
    <updated>2021-12-03T09:13:23.111Z</updated>
    
    <content type="html"><![CDATA[<p>这是我自己写的自启项脚本</p><p>startup1.bat</p><pre class="line-numbers language-bat" data-language="bat"><code class="language-bat">start &#x2F;min D:\z_others\other\Everything\Everything.exestart &#x2F;min D:\z_others\other\盘姬工具箱\PracticalTools\MemReduct\x64\memreduct.exeexit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>/min可以让程序自启后最小化</p><p>bat不支持自启后托盘</p><p>vbs可能会支持，有待发掘</p><p>startup0.vbs</p><pre class="line-numbers language-vbscript" data-language="vbscript"><code class="language-vbscript">set ws&#x3D;WScript.CreateObject(&quot;WScript.Shell&quot;)ws.Run &quot;D:\A_User_Quickcache\Desktop\startup1.bat&quot;,0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这是我自己写的自启项脚本&lt;/p&gt;
&lt;p&gt;startup1.bat&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-bat&quot; data-language=&quot;bat&quot;&gt;&lt;code class=&quot;language-bat&quot;&gt;start &amp;#x2F;mi</summary>
      
    
    
    
    
    <category term="windows" scheme="https://zhaoyushuo123.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>自定义开机启动</title>
    <link href="https://zhaoyushuo123.github.io/post/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8.html</id>
    <published>2021-12-03T06:10:51.000Z</published>
    <updated>2021-12-07T01:20:29.742Z</updated>
    
    <content type="html"><![CDATA[<p>这是windwos7时的教程</p><p>主要针对everything被UAC屏蔽的缘故(软件获取权限过多被强制禁止开机启动)</p><p><a href="https://blog.csdn.net/hzfu007/article/details/6602038">https://blog.csdn.net/hzfu007/article/details/6602038</a></p><p>虽然是10年前的教程，不过放到现在windwos10也依然是干货，具有通用性</p><p>2021/12/7更进</p><p>制作一个bat脚本更高效</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这是windwos7时的教程&lt;/p&gt;
&lt;p&gt;主要针对everything被UAC屏蔽的缘故(软件获取权限过多被强制禁止开机启动)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/hzfu007/article/details/6602038&quot;&gt;h</summary>
      
    
    
    
    
    <category term="windows" scheme="https://zhaoyushuo123.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>易码</title>
    <link href="https://zhaoyushuo123.github.io/post/%E6%98%93%E7%A0%81.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E6%98%93%E7%A0%81.html</id>
    <published>2021-12-03T02:24:02.000Z</published>
    <updated>2021-12-03T02:28:16.991Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-none"><code class="language-none">最美的相遇，总在不经意间走进心里；   最美的缘份，总能绽放出最璀璨的徇丽； <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;最美的相遇，总在不经意间走进心里；   
最美的缘份，总能绽放出最璀璨的徇丽； 
&lt;span aria-hidden=&quot;true&quot; class=</summary>
      
    
    
    
    
    <category term="美句" scheme="https://zhaoyushuo123.github.io/tags/%E7%BE%8E%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>b站bili手机版只缓存音频的方式</title>
    <link href="https://zhaoyushuo123.github.io/post/b%E7%AB%99bili%E6%89%8B%E6%9C%BA%E7%89%88%E5%8F%AA%E7%BC%93%E5%AD%98%E9%9F%B3%E9%A2%91%E7%9A%84%E6%96%B9%E5%BC%8F.html"/>
    <id>https://zhaoyushuo123.github.io/post/b%E7%AB%99bili%E6%89%8B%E6%9C%BA%E7%89%88%E5%8F%AA%E7%BC%93%E5%AD%98%E9%9F%B3%E9%A2%91%E7%9A%84%E6%96%B9%E5%BC%8F.html</id>
    <published>2021-12-03T02:21:43.000Z</published>
    <updated>2021-12-03T02:23:08.997Z</updated>
    
    <content type="html"><![CDATA[<p>b站音频和视频是分开缓存的<br>路径在Android/data/tv.danmaku.bili/download下<br>其中audio.m4s为所需音频</p><p>将后缀.m4s改为.m4a即可使用</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;b站音频和视频是分开缓存的&lt;br&gt;路径在Android/data/tv.danmaku.bili/download下&lt;br&gt;其中audio.m4s为所需音频&lt;/p&gt;
&lt;p&gt;将后缀.m4s改为.m4a即可使用&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="手机" scheme="https://zhaoyushuo123.github.io/tags/%E6%89%8B%E6%9C%BA/"/>
    
  </entry>
  
</feed>
