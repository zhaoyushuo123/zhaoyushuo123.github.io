<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://zhaoyushuo123.github.io/atom.xml" rel="self"/>
  
  <link href="https://zhaoyushuo123.github.io/"/>
  <updated>2022-02-22T01:51:48.359Z</updated>
  <id>https://zhaoyushuo123.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>dataframe处理datatime</title>
    <link href="https://zhaoyushuo123.github.io/post/dataframe%E5%A4%84%E7%90%86datatime.html"/>
    <id>https://zhaoyushuo123.github.io/post/dataframe%E5%A4%84%E7%90%86datatime.html</id>
    <published>2022-02-22T01:50:51.000Z</published>
    <updated>2022-02-22T01:51:48.359Z</updated>
    
    <content type="html"><![CDATA[<p>python处理日期缺失<br>1）DataFrame.reindex：调整dataframe的索引以适应新的索引<br>2） DataFrame.resample，可以对时间序列重新采样，支持补充缺失值<br><a href="https://blog.csdn.net/m0_51230647/article/details/108876200">https://blog.csdn.net/m0_51230647/article/details/108876200</a></p><p>python转换datetime和str<br><a href="https://www.jianshu.com/p/b10b8389c821">https://www.jianshu.com/p/b10b8389c821</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;python处理日期缺失&lt;br&gt;1）DataFrame.reindex：调整dataframe的索引以适应新的索引&lt;br&gt;2） DataFrame.resample，可以对时间序列重新采样，支持补充缺失值&lt;br&gt;&lt;a href=&quot;https://blog.csdn.net/</summary>
      
    
    
    
    
    <category term="python" scheme="https://zhaoyushuo123.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>建议的编程语言列表</title>
    <link href="https://zhaoyushuo123.github.io/post/%E5%BB%BA%E8%AE%AE%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%88%97%E8%A1%A8.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E5%BB%BA%E8%AE%AE%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%88%97%E8%A1%A8.html</id>
    <published>2022-02-22T01:48:57.000Z</published>
    <updated>2022-02-22T01:49:22.212Z</updated>
    
    <content type="html"><![CDATA[<p>C/C++/C#<br>python<br>java<br>go<br>rust<br>perl<br>sql<br>nodejs<br>javascript<br>typescript<br>R<br>ruby<br>Visual Basic<br>lua</p><p>hadoop<br>swift<br>matlab<br>haskell<br>php</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;C/C++/C#&lt;br&gt;python&lt;br&gt;java&lt;br&gt;go&lt;br&gt;rust&lt;br&gt;perl&lt;br&gt;sql&lt;br&gt;nodejs&lt;br&gt;javascript&lt;br&gt;typescript&lt;br&gt;R&lt;br&gt;ruby&lt;br&gt;Visual Basic&lt;br&gt;lua&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    
    <category term="编程语言" scheme="https://zhaoyushuo123.github.io/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>vmware许可证</title>
    <link href="https://zhaoyushuo123.github.io/post/vmware%E8%AE%B8%E5%8F%AF%E8%AF%81.html"/>
    <id>https://zhaoyushuo123.github.io/post/vmware%E8%AE%B8%E5%8F%AF%E8%AF%81.html</id>
    <published>2022-02-22T01:48:03.000Z</published>
    <updated>2022-02-22T01:48:27.676Z</updated>
    
    <content type="html"><![CDATA[<p>ZF3R0-FHED2-M80TY-8QYGC-NPKYF</p><p>YF390-0HF8P-M81RQ-2DXQE-M2UT6</p><p>ZF71R-DMX85-08DQY-8YMNC-PPHV8</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ZF3R0-FHED2-M80TY-8QYGC-NPKYF&lt;/p&gt;
&lt;p&gt;YF390-0HF8P-M81RQ-2DXQE-M2UT6&lt;/p&gt;
&lt;p&gt;ZF71R-DMX85-08DQY-8YMNC-PPHV8&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="vmware" scheme="https://zhaoyushuo123.github.io/tags/vmware/"/>
    
  </entry>
  
  <entry>
    <title>bat固定到开始</title>
    <link href="https://zhaoyushuo123.github.io/post/bat%E5%9B%BA%E5%AE%9A%E5%88%B0%E5%BC%80%E5%A7%8B.html"/>
    <id>https://zhaoyushuo123.github.io/post/bat%E5%9B%BA%E5%AE%9A%E5%88%B0%E5%BC%80%E5%A7%8B.html</id>
    <published>2022-02-22T01:46:17.000Z</published>
    <updated>2022-02-22T01:46:47.763Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.jb51.net/os/win10/483729.html">https://www.jb51.net/os/win10/483729.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.jb51.net/os/win10/483729.html&quot;&gt;https://www.jb51.net/os/win10/483729.html&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="windows" scheme="https://zhaoyushuo123.github.io/tags/windows/"/>
    
    <category term="bat" scheme="https://zhaoyushuo123.github.io/tags/bat/"/>
    
  </entry>
  
  <entry>
    <title>spark与hadoop</title>
    <link href="https://zhaoyushuo123.github.io/post/spark%E4%B8%8Ehadoop.html"/>
    <id>https://zhaoyushuo123.github.io/post/spark%E4%B8%8Ehadoop.html</id>
    <published>2022-02-10T14:52:22.000Z</published>
    <updated>2022-02-10T14:53:11.378Z</updated>
    
    <content type="html"><![CDATA[<p>初步了解，详看大佬文章.mark一下</p><p><a href="https://blog.csdn.net/hongxingabc/article/details/81565174">https://blog.csdn.net/hongxingabc/article/details/81565174</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;初步了解，详看大佬文章.mark一下&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/hongxingabc/article/details/81565174&quot;&gt;https://blog.csdn.net/hongxingabc/article/</summary>
      
    
    
    
    
    <category term="hadoop" scheme="https://zhaoyushuo123.github.io/tags/hadoop/"/>
    
    <category term="spark" scheme="https://zhaoyushuo123.github.io/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>vscode配置markdown</title>
    <link href="https://zhaoyushuo123.github.io/post/vscode%E9%85%8D%E7%BD%AEmarkdown.html"/>
    <id>https://zhaoyushuo123.github.io/post/vscode%E9%85%8D%E7%BD%AEmarkdown.html</id>
    <published>2022-02-07T08:50:48.000Z</published>
    <updated>2022-02-07T08:51:55.280Z</updated>
    
    <content type="html"><![CDATA[<p>目前没有找到好用的markdown内代码块的自动补全功能</p><p><a href="https://www.jianshu.com/p/a87e9ca2d208">https://www.jianshu.com/p/a87e9ca2d208</a></p><p><a href="https://blog.csdn.net/qq_36171287/article/details/118732360?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-4.pc_relevant_default&amp;spm=1001.2101.3001.4242.3&amp;utm_relevant_index=7">https://blog.csdn.net/qq_36171287/article/details/118732360?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-4.pc_relevant_default&amp;spm=1001.2101.3001.4242.3&amp;utm_relevant_index=7</a></p><p><a href="https://blog.csdn.net/fengqifly/article/details/115036991?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-1.pc_relevant_paycolumn_v3&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-1.pc_relevant_paycolumn_v3&amp;utm_relevant_index=2">https://blog.csdn.net/fengqifly/article/details/115036991?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-1.pc_relevant_paycolumn_v3&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-1.pc_relevant_paycolumn_v3&amp;utm_relevant_index=2</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;目前没有找到好用的markdown内代码块的自动补全功能&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/a87e9ca2d208&quot;&gt;https://www.jianshu.com/p/a87e9ca2d208&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a</summary>
      
    
    
    
    
    <category term="vscode" scheme="https://zhaoyushuo123.github.io/tags/vscode/"/>
    
    <category term="markdown" scheme="https://zhaoyushuo123.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>#define CRT_SECURE_NO_WARNINGS 1</title>
    <link href="https://zhaoyushuo123.github.io/post/define-CRT-SECURE-NO-WARNINGS-1.html"/>
    <id>https://zhaoyushuo123.github.io/post/define-CRT-SECURE-NO-WARNINGS-1.html</id>
    <published>2022-02-07T08:11:05.000Z</published>
    <updated>2022-02-07T08:12:51.155Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/daimasanjiaomao/p/14134020.html">https://www.cnblogs.com/daimasanjiaomao/p/14134020.html</a></p><p><a href="https://blog.csdn.net/helloworld0906/article/details/84566276">https://blog.csdn.net/helloworld0906/article/details/84566276</a></p><p>#define CRT_SECURE_NO_WARNINGS 1主要针对IDE VS起作用</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/daimasanjiaomao/p/14134020.html&quot;&gt;https://www.cnblogs.com/daimasanjiaomao/p/14134020.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a h</summary>
      
    
    
    
    
    <category term="windows" scheme="https://zhaoyushuo123.github.io/tags/windows/"/>
    
    <category term="c" scheme="https://zhaoyushuo123.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>postgresql安装问题</title>
    <link href="https://zhaoyushuo123.github.io/post/postgresql%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98.html"/>
    <id>https://zhaoyushuo123.github.io/post/postgresql%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98.html</id>
    <published>2022-02-04T05:47:48.000Z</published>
    <updated>2022-02-04T05:51:46.710Z</updated>
    
    <content type="html"><![CDATA[<p>postgresql安装问题坑有很多，大致分为三大类：</p><p>1.用户权限问题，postgresql安装时需要在windows下创建新的名为postgres的用户</p><p>2.版本问题，截至2022/2/4；windows10建议安装postgresql13版本而不用14版本</p><p>3.路径/环境变量/语言选择问题：路径中不要有空格，环境变量要在bin目录下，语言选择因人而异都试一下(直接默认即可，在pgAdmin4下可以调中文)</p><p><a href="https://www.cnblogs.com/jianxuanbing/p/9160896.html">https://www.cnblogs.com/jianxuanbing/p/9160896.html</a><br><a href="https://www.cnblogs.com/itwlp/p/12799217.html">https://www.cnblogs.com/itwlp/p/12799217.html</a><br><a href="https://blog.csdn.net/xiuxiuxiu666/article/details/107982981">https://blog.csdn.net/xiuxiuxiu666/article/details/107982981</a><br><a href="https://www.cnblogs.com/asummer/p/8671148.html">https://www.cnblogs.com/asummer/p/8671148.html</a><br><a href="https://www.bilibili.com/video/BV1bz4y1k75a?from=search&amp;seid=14886922895094291783&amp;spm_id_from=333.337.0.0">https://www.bilibili.com/video/BV1bz4y1k75a?from=search&amp;seid=14886922895094291783&amp;spm_id_from=333.337.0.0</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;postgresql安装问题坑有很多，大致分为三大类：&lt;/p&gt;
&lt;p&gt;1.用户权限问题，postgresql安装时需要在windows下创建新的名为postgres的用户&lt;/p&gt;
&lt;p&gt;2.版本问题，截至2022/2/4；windows10建议安装postgresql13版</summary>
      
    
    
    
    
    <category term="postgresql" scheme="https://zhaoyushuo123.github.io/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>打卡.py</title>
    <link href="https://zhaoyushuo123.github.io/post/%E6%89%93%E5%8D%A1-py.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E6%89%93%E5%8D%A1-py.html</id>
    <published>2022-01-31T11:27:08.000Z</published>
    <updated>2022-01-31T11:27:46.131Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#pip install pymouse</span><span class="token comment">#pip install pyUserInput</span><span class="token comment">#pip install pyperclip</span><span class="token comment">#pip install pyinstaller</span><span class="token comment">#pip install pyhook3</span><span class="token keyword">import</span> time<span class="token keyword">import</span> tkinter <span class="token keyword">as</span> tk<span class="token keyword">from</span> tkinter <span class="token keyword">import</span> ttk<span class="token punctuation">,</span> messagebox <span class="token keyword">as</span> msg<span class="token keyword">import</span> pymouse<span class="token punctuation">,</span> pykeyboard<span class="token punctuation">,</span> pyperclip<span class="token comment"># 创建用户窗口</span>mainForm <span class="token operator">=</span> tk<span class="token punctuation">.</span>Tk<span class="token punctuation">(</span><span class="token punctuation">)</span>mainForm<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'自动群发系统'</span><span class="token punctuation">)</span>mainForm<span class="token punctuation">.</span>resizable<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 输入框，用于输入要群发的用户名</span>nameText <span class="token operator">=</span> tk<span class="token punctuation">.</span>Text<span class="token punctuation">(</span>mainForm<span class="token punctuation">,</span> height<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">)</span>nameText<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token string">"在此处键入需要群发消息的名单"</span><span class="token punctuation">)</span>nameText<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>row<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> padx<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> pady<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>msgText <span class="token operator">=</span> tk<span class="token punctuation">.</span>Text<span class="token punctuation">(</span>mainForm<span class="token punctuation">,</span> height<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">)</span>msgText<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token string">"在此处键入群发的内容哦哦哦"</span><span class="token punctuation">)</span>msgText<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>row<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> padx<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> pady<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>mouseSearchXY <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>mouseInputXY <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">onClickMouseButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> mouseSearchXY<span class="token punctuation">,</span> mouseInputXY    m <span class="token operator">=</span> pymouse<span class="token punctuation">.</span>PyMouse<span class="token punctuation">(</span><span class="token punctuation">)</span>    msg<span class="token punctuation">.</span>showinfo<span class="token punctuation">(</span><span class="token string">'提示'</span><span class="token punctuation">,</span> <span class="token string">'请在点击确认后2秒内将鼠标移动到QQ的搜索框，2秒后自动获取搜索框鼠标位置。'</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    mouseSearchXY <span class="token operator">=</span> m<span class="token punctuation">.</span>position<span class="token punctuation">(</span><span class="token punctuation">)</span>    msg<span class="token punctuation">.</span>showinfo<span class="token punctuation">(</span><span class="token string">'成功'</span><span class="token punctuation">,</span> <span class="token string">'成功，请在点击确认后2秒内将鼠标移动到QQ的输入框，2秒后自动获取输入框鼠标位置。'</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    mouseInputXY <span class="token operator">=</span> m<span class="token punctuation">.</span>position<span class="token punctuation">(</span><span class="token punctuation">)</span>    msg<span class="token punctuation">.</span>showinfo<span class="token punctuation">(</span><span class="token string">'成功'</span><span class="token punctuation">,</span> <span class="token string">'任务成功完成'</span><span class="token punctuation">)</span>mouseButton <span class="token operator">=</span> ttk<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>mainForm<span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token string">'点击获取鼠标位置'</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">,</span> command<span class="token operator">=</span>onClickMouseButton<span class="token punctuation">)</span>mouseButton<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>row<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> padx<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> pady<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">onClickStartButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 判断是否已经读取鼠标位置</span>    <span class="token keyword">if</span> mouseSearchXY <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">or</span> mouseInputXY <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        msg<span class="token punctuation">.</span>showerror<span class="token punctuation">(</span><span class="token string">'错误'</span><span class="token punctuation">,</span> <span class="token string">'请先获取鼠标位置哦哦哦'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token comment"># 判断输入框有没有内容</span>    nameContent <span class="token operator">=</span> nameText<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> tk<span class="token punctuation">.</span>END<span class="token punctuation">)</span><span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> nameContent <span class="token operator">==</span> <span class="token string">'在此处键入需要群发消息的名单'</span> <span class="token keyword">or</span> nameContent <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>        msg<span class="token punctuation">.</span>showerror<span class="token punctuation">(</span><span class="token string">'错误'</span><span class="token punctuation">,</span> <span class="token string">'请先输入名单哦哦哦'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    msgContent <span class="token operator">=</span> msgText<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> tk<span class="token punctuation">.</span>END<span class="token punctuation">)</span><span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> msgContent <span class="token operator">==</span> <span class="token string">'在此处键入群发的内容哦哦哦'</span> <span class="token keyword">or</span> msgContent <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>        msg<span class="token punctuation">.</span>showerror<span class="token punctuation">(</span><span class="token string">'错误'</span><span class="token punctuation">,</span> <span class="token string">'请先输入群发的内容哦哦哦'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>    <span class="token comment"># 开始群发</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> msg<span class="token punctuation">.</span>askokcancel<span class="token punctuation">(</span><span class="token string">'提示'</span><span class="token punctuation">,</span> <span class="token string">'开始干活喽，在我说完成之前别动鼠标哦'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span>    m <span class="token operator">=</span> pymouse<span class="token punctuation">.</span>PyMouse<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 获取鼠标对象</span>    k <span class="token operator">=</span> pykeyboard<span class="token punctuation">.</span>PyKeyboard<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 获取键盘对象</span>    lst <span class="token operator">=</span> nameContent<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> lst<span class="token punctuation">:</span>        m<span class="token punctuation">.</span>click<span class="token punctuation">(</span>mouseSearchXY<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> mouseSearchXY<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        pyperclip<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>i<span class="token punctuation">)</span>        k<span class="token punctuation">.</span>press_key<span class="token punctuation">(</span>k<span class="token punctuation">.</span>control_key<span class="token punctuation">)</span>        k<span class="token punctuation">.</span>tap_key<span class="token punctuation">(</span><span class="token string">'v'</span><span class="token punctuation">)</span>        k<span class="token punctuation">.</span>release_key<span class="token punctuation">(</span>k<span class="token punctuation">.</span>control_key<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>        k<span class="token punctuation">.</span>tap_key<span class="token punctuation">(</span>k<span class="token punctuation">.</span>enter_key<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>        k<span class="token punctuation">.</span>tap_key<span class="token punctuation">(</span>k<span class="token punctuation">.</span>enter_key<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>        m<span class="token punctuation">.</span>click<span class="token punctuation">(</span>mouseInputXY<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> mouseInputXY<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        pyperclip<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>msgContent<span class="token punctuation">)</span>        k<span class="token punctuation">.</span>press_key<span class="token punctuation">(</span>k<span class="token punctuation">.</span>control_key<span class="token punctuation">)</span>        k<span class="token punctuation">.</span>tap_key<span class="token punctuation">(</span><span class="token string">'v'</span><span class="token punctuation">)</span>        k<span class="token punctuation">.</span>release_key<span class="token punctuation">(</span>k<span class="token punctuation">.</span>control_key<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>        k<span class="token punctuation">.</span>tap_key<span class="token punctuation">(</span>k<span class="token punctuation">.</span>enter_key<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>    msg<span class="token punctuation">.</span>showinfo<span class="token punctuation">(</span><span class="token string">'提示'</span><span class="token punctuation">,</span> <span class="token string">'任务成功完成！'</span><span class="token punctuation">)</span>startButton <span class="token operator">=</span> ttk<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>mainForm<span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token string">'启动'</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">,</span> command<span class="token operator">=</span>onClickStartButton<span class="token punctuation">)</span>startButton<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>row<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> padx<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> pady<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>mainForm<span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;#pip install pymo</summary>
      
    
    
    
    
    <category term="应用程序" scheme="https://zhaoyushuo123.github.io/tags/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>windows下配置c++环境</title>
    <link href="https://zhaoyushuo123.github.io/post/windows%E4%B8%8B%E9%85%8D%E7%BD%AEc-%E7%8E%AF%E5%A2%83.html"/>
    <id>https://zhaoyushuo123.github.io/post/windows%E4%B8%8B%E9%85%8D%E7%BD%AEc-%E7%8E%AF%E5%A2%83.html</id>
    <published>2022-01-27T12:23:45.000Z</published>
    <updated>2022-01-27T12:25:46.453Z</updated>
    
    <content type="html"><![CDATA[<p>gcc—-&gt;c—&gt;.c<br>g++—-?c++–&gt;.cpp<br>这个链接下很详细<br><a href="https://blog.csdn.net/justidle/article/details/105845768">https://blog.csdn.net/justidle/article/details/105845768</a><br>可参考<br><a href="https://code.visualstudio.com/docs/cpp/config-mingw">https://code.visualstudio.com/docs/cpp/config-mingw</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;gcc—-&amp;gt;c—&amp;gt;.c&lt;br&gt;g++—-?c++–&amp;gt;.cpp&lt;br&gt;这个链接下很详细&lt;br&gt;&lt;a href=&quot;https://blog.csdn.net/justidle/article/details/105845768&quot;&gt;https://blog.cs</summary>
      
    
    
    
    
    <category term="windows" scheme="https://zhaoyushuo123.github.io/tags/windows/"/>
    
    <category term="vscode" scheme="https://zhaoyushuo123.github.io/tags/vscode/"/>
    
    <category term="c/c++" scheme="https://zhaoyushuo123.github.io/tags/c-c/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu换源</title>
    <link href="https://zhaoyushuo123.github.io/post/ubuntu%E6%8D%A2%E6%BA%90.html"/>
    <id>https://zhaoyushuo123.github.io/post/ubuntu%E6%8D%A2%E6%BA%90.html</id>
    <published>2022-01-18T01:36:15.000Z</published>
    <updated>2022-01-18T01:38:05.760Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/Powerking666/article/details/120601812">https://blog.csdn.net/Powerking666/article/details/120601812</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/Powerking666/article/details/120601812&quot;&gt;https://blog.csdn.net/Powerking666/article/details/120601812&lt;/a&gt;&lt;/</summary>
      
    
    
    
    
    <category term="ubuntu" scheme="https://zhaoyushuo123.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>朴素贝叶斯</title>
    <link href="https://zhaoyushuo123.github.io/post/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF.html</id>
    <published>2021-12-30T13:19:23.000Z</published>
    <updated>2021-12-30T13:22:52.695Z</updated>
    
    <content type="html"><![CDATA[<p>这里是朴素贝叶斯的理论概述</p><p><a href="https://blog.csdn.net/qq_17073497/article/details/81076250">https://blog.csdn.net/qq_17073497/article/details/81076250</a></p><p>对应的，在python3.9，windows10，pycharm实现朴素贝叶斯分类器对文件标签分类</p><p>使用sklearn包</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> io<span class="token keyword">from</span> sklearn <span class="token keyword">import</span> metrics<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>naive_bayes <span class="token keyword">import</span> MultinomialNB<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>feature_extraction<span class="token punctuation">.</span>text <span class="token keyword">import</span> TfidfVectorizerstart <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span><span class="token string">r'D:/Jupyter/信息检索/E4/Tr'</span><span class="token punctuation">)</span><span class="token comment"># start = os.listdir(r'/content/drive/MyDrive/信息检索/E4/train')</span>test_path <span class="token operator">=</span> <span class="token string">'D:/Jupyter/信息检索/E4/test-all-in-one'</span> <span class="token operator">+</span> <span class="token string">'/'</span><span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>test_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># print(file)</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>test_path <span class="token operator">+</span> <span class="token builtin">file</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"GBK"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>          line <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>              <span class="token keyword">break</span>          L <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token keyword">for</span> word <span class="token keyword">in</span> L<span class="token punctuation">:</span>              <span class="token comment"># test_contents.append(word)</span>              <span class="token comment"># print(test_contents)</span>              result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>word<span class="token punctuation">)</span>              <span class="token comment"># print(test_contents)</span>              <span class="token comment"># result.append(item)</span>              <span class="token comment"># print(test_labels)</span>        test_contents<span class="token punctuation">.</span>append<span class="token punctuation">(</span>result<span class="token punctuation">)</span>        <span class="token comment"># print(test_contents)</span>        test_labels<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span>        <span class="token comment"># print(test_labels)</span><span class="token keyword">for</span> item <span class="token keyword">in</span> start<span class="token punctuation">:</span>    train_path <span class="token operator">=</span> <span class="token string">'D:/Jupyter/信息检索/E4/Tr/'</span> <span class="token operator">+</span> item <span class="token operator">+</span> <span class="token string">'/'</span>    <span class="token comment"># train_path = '/content/drive/MyDrive/信息检索/E4/train/' + item + '/'</span>    Result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>train_path<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>train_path <span class="token operator">+</span> <span class="token builtin">file</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'gb18030'</span><span class="token punctuation">,</span> errors<span class="token operator">=</span><span class="token string">'ignore'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>              line <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                  <span class="token keyword">break</span>              L <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token keyword">for</span> word <span class="token keyword">in</span> L<span class="token punctuation">:</span>                  Result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>word<span class="token punctuation">)</span>                  <span class="token comment"># print(test_contents)</span>                  <span class="token comment"># Result.append(item)</span>                  <span class="token comment"># print(test_labels)</span>            train_contents<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Result<span class="token punctuation">)</span>            <span class="token comment"># print(test_contents)</span>            train_labels<span class="token punctuation">.</span>append<span class="token punctuation">(</span>item<span class="token punctuation">)</span>            <span class="token comment"># print(test_labels)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>train_contents<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>test_contents<span class="token punctuation">)</span><span class="token punctuation">)</span>train<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>test<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>test_contents<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  test<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>test_contents<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># print(test)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>train_contents<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  train<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>train_contents<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># print(train[0])</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>train<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># tfidf_vec = TfidfVectorizer()</span>stop_words <span class="token operator">=</span> <span class="token punctuation">[</span>line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> line <span class="token keyword">in</span> io<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'D:/Jupyter/信息检索/E4/stopword.txt'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>stop_words<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 计算tf-idf向量的值</span><span class="token comment"># tf = TfidfVectorizer(tokenizer=nltk.word_tokenize, stop_words=stop_words, max_df=0.9)</span>tf <span class="token operator">=</span> TfidfVectorizer<span class="token punctuation">(</span>stop_words<span class="token operator">=</span>stop_words<span class="token punctuation">,</span> max_df<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">)</span>train_features <span class="token operator">=</span> tf<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>train<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>train_features<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token comment"># print(train_features)</span><span class="token comment"># 多项式贝叶斯分类器</span><span class="token comment"># clf = MultinomialNB(alpha=0.001).fit(train_features, train_labels) # Lidstone平滑</span>clf <span class="token operator">=</span> MultinomialNB<span class="token punctuation">(</span>alpha<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_features<span class="token punctuation">,</span> train_labels<span class="token punctuation">)</span> <span class="token comment"># Laplace平滑</span><span class="token keyword">print</span><span class="token punctuation">(</span>clf<span class="token punctuation">)</span><span class="token comment"># 预测</span><span class="token comment"># test_tf = TfidfVectorizer(tokenizer=nltk.word_tokenize, stop_words=stop_words, max_df=0.5, vocabulary=tf.vocabulary_)</span>test_tf <span class="token operator">=</span> TfidfVectorizer<span class="token punctuation">(</span>stop_words<span class="token operator">=</span>stop_words<span class="token punctuation">,</span> max_df<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">,</span> vocabulary<span class="token operator">=</span>tf<span class="token punctuation">.</span>vocabulary_<span class="token punctuation">)</span>test_features <span class="token operator">=</span> test_tf<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>test_features<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token comment"># print(test_features)</span><span class="token comment"># predict 求解所有后验概率并找出最大的那个。</span>predicted_labels <span class="token operator">=</span> clf<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_features<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>predicted_labels<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>predicted_labels<span class="token punctuation">)</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'D:/Jupyter/信息检索/E4/pred.txt'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>predicted_labels<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"%s:%s"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>test_labels<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>predicted_labels<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>    f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实现时应当自己手撸tfidf</p><p>引文python32的列表元素个数存储量不支持</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这里是朴素贝叶斯的理论概述&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_17073497/article/details/81076250&quot;&gt;https://blog.csdn.net/qq_17073497/article/detai</summary>
      
    
    
    
    
    <category term="机器学习" scheme="https://zhaoyushuo123.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>python版本控制切换说明</title>
    <link href="https://zhaoyushuo123.github.io/post/python%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%88%87%E6%8D%A2%E8%AF%B4%E6%98%8E.html"/>
    <id>https://zhaoyushuo123.github.io/post/python%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%88%87%E6%8D%A2%E8%AF%B4%E6%98%8E.html</id>
    <published>2021-12-24T07:59:59.000Z</published>
    <updated>2021-12-24T08:01:52.380Z</updated>
    
    <content type="html"><![CDATA[<p>在windwos下同时安装anconda3，anconda2,python3，python2</p><p>在cmd中启用时</p><p>py -2对应anconda2</p><p>py -3和python对应Python3</p><p>python2对应python2</p><p>ipython对应anconda3</p><p>在conda中切换ipython启用时的默认python版本</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在windwos下同时安装anconda3，anconda2,python3，python2&lt;/p&gt;
&lt;p&gt;在cmd中启用时&lt;/p&gt;
&lt;p&gt;py -2对应anconda2&lt;/p&gt;
&lt;p&gt;py -3和python对应Python3&lt;/p&gt;
&lt;p&gt;python2对应python</summary>
      
    
    
    
    
    <category term="python" scheme="https://zhaoyushuo123.github.io/tags/python/"/>
    
    <category term="anconda" scheme="https://zhaoyushuo123.github.io/tags/anconda/"/>
    
  </entry>
  
  <entry>
    <title>bookstore实验流程小记</title>
    <link href="https://zhaoyushuo123.github.io/post/bookstore%E5%AE%9E%E9%AA%8C%E6%B5%81%E7%A8%8B%E5%B0%8F%E8%AE%B0.html"/>
    <id>https://zhaoyushuo123.github.io/post/bookstore%E5%AE%9E%E9%AA%8C%E6%B5%81%E7%A8%8B%E5%B0%8F%E8%AE%B0.html</id>
    <published>2021-12-24T07:57:59.000Z</published>
    <updated>2021-12-24T07:58:45.725Z</updated>
    
    <content type="html"><![CDATA[<p>后续会上传实验完成的源码</p><p>数据库第二次实验</p><p>创建商铺<br>post<br><a href="http://address/seller/create_store">http://address/seller/create_store</a></p><p>request:</p><p>headers<br>body</p><p>response:<br>200创建商铺成功<br>5xx商铺ID已存在</p><hr><p>查看store_id是否存在<br>如果不存在则执行<br>否则返回id</p><hr><p>商家添加书籍信息<br><a href="http://address/seller/add_book">http://address/seller/add_book</a></p><p>request:</p><p>headers<br>body</p><p>response:<br>200添加图书信息成功<br>5xx卖家用户id不存在<br>5xx商铺id不存在<br>5xx图书id已存在</p><hr><p>查看卖家id是否存在<br>若存在，查询商铺id是否存在<br>若存在，查询图书id是否存在</p><hr><p>商家添加书籍库存<br><a href="http://address/seller/add_stock_level">http://address/seller/add_stock_level</a></p><p>response:<br>200创建成功<br>5xx商铺id不存在<br>5xx图书id不存在</p><hr><p>查询商铺id是否存在<br>若存在，查询图书id是否存在</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;后续会上传实验完成的源码&lt;/p&gt;
&lt;p&gt;数据库第二次实验&lt;/p&gt;
&lt;p&gt;创建商铺&lt;br&gt;post&lt;br&gt;&lt;a href=&quot;http://address/seller/create_store&quot;&gt;http://address/seller/create_store&lt;/a&gt;&lt;/</summary>
      
    
    
    
    
    <category term="project" scheme="https://zhaoyushuo123.github.io/tags/project/"/>
    
  </entry>
  
  <entry>
    <title>论文门户网站</title>
    <link href="https://zhaoyushuo123.github.io/post/%E8%AE%BA%E6%96%87%E9%97%A8%E6%88%B7%E7%BD%91%E7%AB%99.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E8%AE%BA%E6%96%87%E9%97%A8%E6%88%B7%E7%BD%91%E7%AB%99.html</id>
    <published>2021-12-24T07:57:11.000Z</published>
    <updated>2021-12-24T07:57:34.145Z</updated>
    
    <content type="html"><![CDATA[<p>唯一的亮点是社区化。论检索能力不如google scholar，论可获取文献量不如scihub，论文献管理不如zotera</p><p><a href="https://readpaper.com/">https://readpaper.com/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;唯一的亮点是社区化。论检索能力不如google scholar，论可获取文献量不如scihub，论文献管理不如zotera&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://readpaper.com/&quot;&gt;https://readpaper.com/&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="论文" scheme="https://zhaoyushuo123.github.io/tags/%E8%AE%BA%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>大数据体验课小记</title>
    <link href="https://zhaoyushuo123.github.io/post/%E5%A4%A7%E6%95%B0%E6%8D%AE%E4%BD%93%E9%AA%8C%E8%AF%BE%E5%B0%8F%E8%AE%B0.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E5%A4%A7%E6%95%B0%E6%8D%AE%E4%BD%93%E9%AA%8C%E8%AF%BE%E5%B0%8F%E8%AE%B0.html</id>
    <published>2021-12-24T07:55:14.000Z</published>
    <updated>2021-12-24T07:55:24.492Z</updated>
    
    <content type="html"><![CDATA[<p>全球所有数据量加一起是44ZB</p><p>平时是TB数量级，属于小数据</p><p>有3V特征才叫大数据(订单峰值达58.3万笔/秒   )</p><p>大数据的3V特征</p><p>Volumen规模大  </p><p>Variety多样化</p><p>Velocity高速性</p><p>HDFS    存</p><p>分布式存储系统</p><p>同一份数据copy两次，一共三份；</p><p>每份数据分多块，存于node中</p><p>然后由name node存储数据块的位置信息</p><p>MP算</p><p>MapReduce – WordCount Mapper    </p><p>MapReduce – WordCout Shuffle&amp;Sort</p><p>MapReduce–WordCount SumReducer</p><p>MapReduce–并行执行Mappers提速</p><p>Map实现</p><p>1.生产样本数据</p><p>2.生成kv对</p><p>3.reduce操作</p><p>4.数据结果</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;全球所有数据量加一起是44ZB&lt;/p&gt;
&lt;p&gt;平时是TB数量级，属于小数据&lt;/p&gt;
&lt;p&gt;有3V特征才叫大数据(订单峰值达58.3万笔/秒   )&lt;/p&gt;
&lt;p&gt;大数据的3V特征&lt;/p&gt;
&lt;p&gt;Volumen规模大  &lt;/p&gt;
&lt;p&gt;Variety多样化&lt;/p&gt;
&lt;p&gt;Ve</summary>
      
    
    
    
    
    <category term="大数据" scheme="https://zhaoyushuo123.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>pytorch安装教程</title>
    <link href="https://zhaoyushuo123.github.io/post/pytorch%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B.html"/>
    <id>https://zhaoyushuo123.github.io/post/pytorch%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B.html</id>
    <published>2021-12-24T07:53:02.000Z</published>
    <updated>2021-12-24T07:53:41.636Z</updated>
    
    <content type="html"><![CDATA[<p>安装pytorch前需要安装cuda</p><p>N卡特权</p><p><a href="https://blog.csdn.net/NSJim/article/details/115408138">https://blog.csdn.net/NSJim/article/details/115408138</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;安装pytorch前需要安装cuda&lt;/p&gt;
&lt;p&gt;N卡特权&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/NSJim/article/details/115408138&quot;&gt;https://blog.csdn.net/NSJim/article</summary>
      
    
    
    
    
    <category term="python" scheme="https://zhaoyushuo123.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>文本摘要实验</title>
    <link href="https://zhaoyushuo123.github.io/post/%E6%96%87%E6%9C%AC%E6%91%98%E8%A6%81%E5%AE%9E%E9%AA%8C.html"/>
    <id>https://zhaoyushuo123.github.io/post/%E6%96%87%E6%9C%AC%E6%91%98%E8%A6%81%E5%AE%9E%E9%AA%8C.html</id>
    <published>2021-12-24T07:50:16.000Z</published>
    <updated>2021-12-24T07:52:14.924Z</updated>
    
    <content type="html"><![CDATA[<p>以下是参考</p><p>文本摘要实验</p><p>首先写爬虫爬取新闻</p><p>然后根据爬取的内容做分词</p><p>使用最大覆盖问题的解决思路提炼文本摘要</p><p><a href="https://blog.csdn.net/qq_33722172/article/details/82469050">https://blog.csdn.net/qq_33722172/article/details/82469050</a></p><p><a href="https://www.52pojie.cn/thread-1103864-1-1.html">https://www.52pojie.cn/thread-1103864-1-1.html</a></p><p><a href="https://blog.csdn.net/qq_41776239/article/details/121359151">https://blog.csdn.net/qq_41776239/article/details/121359151</a></p><p><a href="https://blog.csdn.net/Thefreelittle/article/details/121342813?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-1.no_search_link&amp;spm=1001.2101.3001.4242.2">https://blog.csdn.net/Thefreelittle/article/details/121342813?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-1.no_search_link&amp;spm=1001.2101.3001.4242.2</a></p><p>后续会将实验源码上传并附上链接</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;以下是参考&lt;/p&gt;
&lt;p&gt;文本摘要实验&lt;/p&gt;
&lt;p&gt;首先写爬虫爬取新闻&lt;/p&gt;
&lt;p&gt;然后根据爬取的内容做分词&lt;/p&gt;
&lt;p&gt;使用最大覆盖问题的解决思路提炼文本摘要&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_33722172/art</summary>
      
    
    
    
    
    <category term="project" scheme="https://zhaoyushuo123.github.io/tags/project/"/>
    
  </entry>
  
  <entry>
    <title>python+flask+mysql下实现一个请求修改多表</title>
    <link href="https://zhaoyushuo123.github.io/post/python-flask-mysql%E4%B8%8B%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E8%AF%B7%E6%B1%82%E4%BF%AE%E6%94%B9%E5%A4%9A%E8%A1%A8.html"/>
    <id>https://zhaoyushuo123.github.io/post/python-flask-mysql%E4%B8%8B%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E8%AF%B7%E6%B1%82%E4%BF%AE%E6%94%B9%E5%A4%9A%E8%A1%A8.html</id>
    <published>2021-12-14T01:28:07.000Z</published>
    <updated>2021-12-15T00:27:43.439Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">insert_one_book_info</span><span class="token punctuation">(</span>connection<span class="token punctuation">,</span> cursor<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>初始book_id<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>query<span class="token operator">=</span>mysql查询语句<span class="token keyword">try</span><span class="token punctuation">:</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>query<span class="token punctuation">)</span>获取book_id<span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span><span class="token keyword">print</span>rollback<span class="token keyword">if</span> book_id<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">:</span>book_label <span class="token operator">=</span> attendbooklabel<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>insert_one_into_booknumber_attendbooklabel<span class="token punctuation">(</span>model<span class="token operator">=</span>book_label<span class="token punctuation">)</span><span class="token keyword">return</span> book_id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实现级联查询</p><p><a href="https://www.cnblogs.com/hello-/articles/13167185.html">https://www.cnblogs.com/hello-/articles/13167185.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span </summary>
      
    
    
    
    
    <category term="mysql" scheme="https://zhaoyushuo123.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://zhaoyushuo123.github.io/post/test.html"/>
    <id>https://zhaoyushuo123.github.io/post/test.html</id>
    <published>2021-12-10T07:10:19.000Z</published>
    <updated>2021-12-10T07:25:38.001Z</updated>
    
    <content type="html"><![CDATA[<p>这只是一个test文件</p><p>2021-12-10 15:10</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这只是一个test文件&lt;/p&gt;
&lt;p&gt;2021-12-10 15:10&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="test" scheme="https://zhaoyushuo123.github.io/tags/test/"/>
    
  </entry>
  
</feed>
