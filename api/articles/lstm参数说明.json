{"title":"lstm参数说明","uid":"84a5f1db6f06f1bac83346531e4255cf","slug":"lstm参数说明","date":"2022-02-22T01:58:26.000Z","updated":"2022-02-22T01:58:45.838Z","comments":true,"path":"api/articles/lstm参数说明.json","keywords":null,"cover":null,"content":"<ul>\n<li><p><a href=\"https://blog.csdn.net/weixin_42886817/article/details/99831718\">https://blog.csdn.net/weixin_42886817/article/details/99831718</a></p>\n</li>\n<li><pre><code>model = Sequential()\nmodel.add(LSTM(4, input_shape=(1, look_back)))\nmodel.add(Dense(1))\nmodel.compile(loss=&#39;mean_squared_error&#39;, optimizer=&#39;adam&#39;) \n#均方误差损失函mean_squared_error\nmodel.fit(trainX, trainY, epochs=100, batch_size=1, verbose=2)\n</code></pre>\n</li>\n<li><p>Sequential 模型结构： 层（layers）的线性堆栈。简单来说，它是一个简单的线性结构，没有多余分支，是多个网络层的堆叠。</p>\n</li>\n</ul>\n<h4 id=\"input-shape-输入的形状（格式）\"><a href=\"#input-shape-输入的形状（格式）\" class=\"headerlink\" title=\"input shape 输入的形状（格式）\"></a>input <a href=\"https://so.csdn.net/so/search?q=shape&spm=1001.2101.3001.7020\">shape</a> 输入的形状（格式）</h4><p>构建一个模型时，第一层需要给出期待的<code>Input shape</code> ，剩余的层次会自动判断。</p>\n<p>complication 编译<br>在训练模型之前，您需要配置学习过程，这是通过编译方法完成的。 形式是model.compile(…)<br>它收到三个参数：</p>\n<p>优化器（opyimizer）,可以是优化器的字符串标识符，也可以是Optimizer类的实例<br>损失函数（loss function），模型要将其最小化，可以通过字符串标识符指定，可以通过目标函数指定<br>指标（metricts）列表， 对于任何分类问题，需要将其设置为metrics = [‘accuracy’]。 度量可以是现有度量的字符串标识符或自定义度量函数。</p>\n","feature":true,"text":" https://blog.csdn.net/weixin_42886817/article/details/99831718 model = Sequential() model.add(LSTM(4, input_shape=(1, look_back))) model.ad...","link":"","photos":[],"count_time":{"symbolsCount":708,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"python","slug":"python","count":6,"path":"api/tags/python.json"},{"name":"lstm","slug":"lstm","count":1,"path":"api/tags/lstm.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#input-shape-%E8%BE%93%E5%85%A5%E7%9A%84%E5%BD%A2%E7%8A%B6%EF%BC%88%E6%A0%BC%E5%BC%8F%EF%BC%89\"><span class=\"toc-text\">input shape 输入的形状（格式）</span></a></li></ol>","author":{"name":"硕硕一只","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fhbimg.huabanimg.com%2F80d6d8c3ba2f7b0b2d6f11ca3aeb3282b0e5e6db4440d-hBmm8H_fw658&refer=http%3A%2F%2Fhbimg.huabanimg.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1640525060&t=3e93c392bb08daa019a7de3fc6da319b","link":"https://zhaoyushuo123.github.io","description":"欢迎来到我的个人博客，本博客以记录链接网址为主，知识内容为辅，禁止他人转载知识内容。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"pip豆瓣清华源","uid":"af02eea06d883607ae0adaede51f4acb","slug":"pip豆瓣清华源","date":"2022-02-22T01:56:47.000Z","updated":"2022-02-22T01:57:06.833Z","comments":true,"path":"api/articles/pip豆瓣清华源.json","keywords":null,"cover":null,"text":"pip install tensorflow -i https://pypi.douban.com/simplepip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple ","link":"","photos":[],"count_time":{"symbolsCount":129,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"python","slug":"python","count":6,"path":"api/tags/python.json"},{"name":"pip","slug":"pip","count":1,"path":"api/tags/pip.json"}],"author":{"name":"硕硕一只","slug":"blog-author","avatar":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fhbimg.huabanimg.com%2F80d6d8c3ba2f7b0b2d6f11ca3aeb3282b0e5e6db4440d-hBmm8H_fw658&refer=http%3A%2F%2Fhbimg.huabanimg.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1640525060&t=3e93c392bb08daa019a7de3fc6da319b","link":"https://zhaoyushuo123.github.io","description":"欢迎来到我的个人博客，本博客以记录链接网址为主，知识内容为辅，禁止他人转载知识内容。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}